[{"name":"app.R","content":"library(shiny)\nlibrary(ggplot2)\n\nui <- fluidPage(\n  titlePanel(\"Shiny App with Sidebar and Four Panels\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"xvar\", \"X-axis variable:\",\n                  choices = names(mtcars), selected = \"wt\"),\n      selectInput(\"yvar\", \"Y-axis variable:\",\n                  choices = names(mtcars), selected = \"mpg\"),\n      selectInput(\"colorvar\", \"Color by:\",\n                  choices = names(mtcars), selected = \"cyl\")\n    ),\n    \n    mainPanel(\n      fluidRow(\n        column(6, plotOutput(\"plot1\")),\n        column(6, plotOutput(\"plot2\"))\n      ),\n      fluidRow(\n        column(6, plotOutput(\"plot3\")),\n        column(6, plotOutput(\"plot4\"))\n      )\n    )\n  )\n)\n\nserver <- function(input, output) {\n  \n  base_plot <- reactive({\n    ggplot(mtcars, aes_string(x = input$xvar, y = input$yvar, color = input$colorvar)) +\n      geom_point(size = 3) +\n      theme_minimal()\n  })\n  \n  output$plot1 <- renderPlot({\n    base_plot() + ggtitle(\"Plot 1\")\n  })\n  \n  output$plot2 <- renderPlot({\n    base_plot() + ggtitle(\"Plot 2\")\n  })\n  \n  output$plot3 <- renderPlot({\n    base_plot() + ggtitle(\"Plot 3\")\n  })\n  \n  output$plot4 <- renderPlot({\n    base_plot() + ggtitle(\"Plot 4\")\n  })\n}\n\nshinyApp(ui = ui, server = server)\n","type":"text"},{"name":"README.md","content":"# shiny","type":"text"},{"name":"_extensions/quarto-ext/shinylive/README.md","content":"# Shinylive package methods\n\n## Methods\n\n### R\n\nInteraction:\n\n```\nRscript -e 'shinylive:::quarto_ext()' [methods] [args]\n```\n\n### Python\n\nInteraction:\n\n```\nshinylive [methods] [args]\n```\n\n## CLI Methods\n\n* `extension info`\n  * Package, version, asset version, and script paths information\n* `extension base-htmldeps`\n  * Quarto html dependencies for the base shinylive integration\n* `extension language-resources`\n  * Language specific resource files for the quarto html dependency named `shinylive`\n* `extension app-resources`\n  * App specific resource files for the quarto html dependency named `shinylive`\n\n### CLI Interface\n* `extension info`\n  * Prints information about the extension including:\n    * `version`: The version of the R package\n    * `assets_version`: The version of the web assets\n    * `scripts`: A list of paths scripts that are used by the extension,\n     mainly `codeblock-to-json`\n  * Example\n    ```\n    {\n      \"version\": \"0.1.0\",\n      \"assets_version\": \"0.2.0\",\n      \"scripts\": {\n        \"codeblock-to-json\": \"/<ASSETS_CACHE_DIR>/shinylive-0.2.0/scripts/codeblock-to-json.js\"\n      }\n    }\n    ```\n* `extension base-htmldeps`\n  * Prints the language agnostic quarto html dependencies as a JSON array.\n    * The first html dependency is the `shinylive` service workers.\n    * The second html dependency is the `shinylive` base dependencies. This\n      dependency will contain the core `shinylive` asset scripts (JS files\n      automatically sourced), stylesheets (CSS files that are automatically\n      included), and resources (additional files that the JS and CSS files can\n      source).\n  * Example\n    ```\n    [\n      {\n        \"name\": \"shinylive-serviceworker\",\n        \"version\": \"0.2.0\",\n        \"meta\": { \"shinylive:serviceworker_dir\": \".\" },\n        \"serviceworkers\": [\n          {\n            \"source\": \"/<ASSETS_CACHE_DIR>/shinylive-0.2.0/shinylive-sw.js\",\n            \"destination\": \"/shinylive-sw.js\"\n          }\n        ]\n      },\n      {\n        \"name\": \"shinylive\",\n        \"version\": \"0.2.0\",\n        \"scripts\": [{\n          \"name\": \"shinylive/load-shinylive-sw.js\",\n          \"path\": \"/<ASSETS_CACHE_DIR>/shinylive-0.2.0/shinylive/load-shinylive-sw.js\",\n            \"attribs\": { \"type\": \"module\" }\n        }],\n        \"stylesheets\": [{\n          \"name\": \"shinylive/shinylive.css\",\n          \"path\": \"/<ASSETS_CACHE_DIR>/shinylive-0.2.0/shinylive/shinylive.css\"\n        }],\n        \"resources\": [\n          {\n            \"name\": \"shinylive/shinylive.js\",\n            \"path\": \"/<ASSETS_CACHE_DIR>/shinylive-0.2.0/shinylive/shinylive.js\"\n          },\n          ... # [ truncated ]\n        ]\n      }\n    ]\n    ```\n* `extension language-resources`\n  * Prints the language-specific resource files as JSON that should be added to the quarto html dependency.\n    * For r-shinylive, this includes the webr resource files\n    * For py-shinylive, this includes the pyodide and pyright resource files.\n  * Example\n    ```\n    [\n      {\n        \"name\": \"shinylive/webr/esbuild.d.ts\",\n        \"path\": \"/<ASSETS_CACHE_DIR>/shinylive-0.2.0/shinylive/webr/esbuild.d.ts\"\n      },\n      {\n        \"name\": \"shinylive/webr/libRblas.so\",\n        \"path\": \"/<ASSETS_CACHE_DIR>/shinylive-0.2.0/shinylive/webr/libRblas.so\"\n      },\n      ... # [ truncated ]\n    ]\n* `extension app-resources`\n  * Prints app-specific resource files as JSON that should be added to the `\"shinylive\"` quarto html dependency.\n  * Currently, r-shinylive does not return any resource files.\n  * Example\n    ```\n    [\n      {\n        \"name\": \"shinylive/pyodide/anyio-3.7.0-py3-none-any.whl\",\n        \"path\": \"/<ASSETS_CACHE_DIR>/shinylive-0.2.0/shinylive/pyodide/anyio-3.7.0-py3-none-any.whl\"\n      },\n      {\n        \"name\": \"shinylive/pyodide/appdirs-1.4.4-py2.py3-none-any.whl\",\n        \"path\": \"/<ASSETS_CACHE_DIR>/shinylive-0.2.0/shinylive/pyodide/appdirs-1.4.4-py2.py3-none-any.whl\"\n      },\n      ... # [ truncated ]\n    ]\n    ```\n","type":"text"},{"name":"_extensions/quarto-ext/shinylive/_extension.yml","content":"name: shinylive\ntitle: Embedded Shinylive applications\nauthor: Winston Chang\nversion: 0.2.0\nquarto-required: \">= 1.2.198\"\ncontributes:\n  filters:\n    - shinylive.lua\n","type":"text"},{"name":"_extensions/quarto-ext/shinylive/resources/css/shinylive-quarto.css","content":"div.output-content,\ndiv.shinylive-wrapper {\n  background-color: rgba(250, 250, 250, 0.65);\n  border: 1px solid rgba(233, 236, 239, 0.65);\n  border-radius: 0.5rem;\n  box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.04), 0px 3px 7px rgba(0, 0, 0, 0.04),\n    0px 12px 30px rgba(0, 0, 0, 0.07);\n  margin-top: 32px;\n  margin-bottom: 32px;\n}\n\ndiv.shinylive-wrapper {\n  margin: 1em 0;\n  border-radius: 8px;\n}\n\n.shinylive-container {\n  background-color: #eeeff2;\n  min-height: auto;\n}\n\n.shinylive-container > div {\n  box-shadow: none;\n}\n\n.editor-container .cm-editor .cm-scroller {\n  font-size: 13px;\n  line-height: 1.5;\n}\n\niframe.app-frame {\n  /* Override the default margin from Bootstrap */\n  margin-bottom: 0;\n}\n","type":"text"},{"name":"_extensions/quarto-ext/shinylive/shinylive.lua","content":"-- Notes:\n-- * 2023/10/04 - Barret:\n--   Always use `callShinyLive()` to call a shinylive extension.\n--   `callPythonShinyLive()` and `callRShinyLive()` should not be used directly.\n--   Instead, always use `callShinyLive()`.\n-- * 2023/10/04 - Barret:\n--   I could not get `error(msg)` to quit the current function execution and\n--   bubble up the stack and stop. Instead, I am using `assert(false, msg)` to\n--   achieve the desired behavior. Multi-line error messages should start with a\n--   `\\n` to keep the message in the same readable area.\n\n\n-- `table` to organize flags to have code only run once.\nlocal hasDoneSetup = { base = false, r = false, python = false, python_version = false }\n-- `table` to store `{ version, assets_version }` for each language's extension.\n-- If both `r` and `python` are used in the same document, then the\n-- `assets_version` for each language must be the same.\nlocal versions = { r = nil, python = nil }\n-- Global variable for the codeblock-to-json.js script file location\nlocal codeblockScript = nil\n-- Global hash table to store app specific dependencies to avoid calling\n-- `quarto.doc.attach_to_dependency()` multiple times for the same dependency.\nlocal appSpecificDeps = {}\n\n-- Display error message and throw error w/ short message\n-- @param msg: string Error message to be displayed\n-- @param short_msg: string Error message to be thrown\nfunction throw_quarto_error(err_msg, ...)\n  n = select(\"#\", ...)\n  if n > 0 then\n    -- Display any meta information about the error\n    -- Add blank lines after msg for line separation for better readability\n    quarto.log.error(...)\n  else\n    quarto.log.error(err_msg .. \"\\n\\n\")\n  end\n  -- Add blank lines after short_msg for line separation for better readability\n  -- Use assert(false, msg) to quit the current function execution and\n  -- bubble up the stack and stop. Barret: I could not get this to work with `error(msg)`.\n  assert(false, err_msg .. \"\\n\")\nend\n\n-- Python specific method to call py-shinylive\n-- @param args: list of string arguments to pass to py-shinylive\n-- @param input: string to pipe into to py-shinylive\nfunction callPythonShinylive(args, input)\n  -- Try calling `pandoc.pipe('shinylive', ...)` and if it fails, print a message\n  -- about installing shinylive python package.\n  local res\n  local status, err = pcall(\n    function()\n      res = pandoc.pipe(\"shinylive\", args, input)\n    end\n  )\n\n  if not status then\n    throw_quarto_error(\n      \"Error running 'shinylive' command. Perhaps you need to install / update the 'shinylive' Python package?\",\n      \"Error running 'shinylive' command. Perhaps you need to install / update the 'shinylive' Python package?\\n\",\n      \"Error:\\n\",\n      err\n    )\n  end\n\n  return res\nend\n\n-- R specific method to call {r-shinylive}\n-- @param args: list of string arguments to pass to r-shinylive\n-- @param input: string to pipe into to r-shinylive\nfunction callRShinylive(args, input)\n  args = { \"-e\",\n    \"shinylive:::quarto_ext()\",\n    table.unpack(args) }\n\n  -- Try calling `pandoc.pipe('Rscript', ...)` and if it fails, print a message\n  -- about installing shinylive R package.\n  local res\n  local status, err = pcall(\n    function()\n      res = pandoc.pipe(\"Rscript\", args, input)\n    end\n  )\n\n  if not status then\n    throw_quarto_error(\n      \"Error running 'Rscript' command. Perhaps you need to install / update the 'shinylive' R package?\",\n      \"Error running 'Rscript' command. Perhaps you need to install / update the 'shinylive' R package?\\n\",\n      \"Error:\\n\",\n      err\n    )\n  end\n\n  return res\nend\n\n-- Returns decoded object\n-- @param language: \"python\" or \"r\"\n-- @param args, input: see `callPythonShinylive` and `callRShinylive`\nfunction callShinylive(language, args, input, parseJson)\n  if input == nil then\n    input = \"\"\n  end\n  if parseJson == nil then\n    parseJson = true\n  end\n\n  local res\n  -- print(\"Calling \" .. language .. \" shinylive with args: \", args)\n  if language == \"python\" then\n    res = callPythonShinylive(args, input)\n  elseif language == \"r\" then\n    res = callRShinylive(args, input)\n  else\n    throw_quarto_error(\"internal - Unknown language: \" .. language)\n  end\n\n  if not parseJson then\n    return res\n  end\n\n  -- Remove any unwanted output before the first curly brace or square bracket.\n  -- print(\"res: \" .. string.sub(res, 1, math.min(string.len(res), 100)) .. \"...\")\n  local curly_start = string.find(res, \"{\", 0, true)\n  local brace_start = string.find(res, \"[\", 0, true)\n  local min_start\n  if curly_start == nil then\n    min_start = brace_start\n  elseif brace_start == nil then\n    min_start = curly_start\n  else\n    min_start = math.min(curly_start, brace_start)\n  end\n  if min_start == nil then\n    local res_str = res\n    if string.len(res) > 100 then\n      res_str = string.sub(res, 1, 100) .. \"... [truncated]\"\n    end\n    throw_quarto_error(\n      \"Could not find start curly brace or start brace in \" ..\n      language .. \" shinylive response. Is JSON being returned from the \" .. language .. \" `shinylive` package?\",\n      \"Could not find start curly brace or start brace in \" .. language .. \" shinylive response.\\n\",\n      \"JSON string being parsed:\\n\",\n      res_str\n    )\n  end\n  if min_start > 1 then\n    res = string.sub(res, min_start)\n  end\n\n\n  -- Decode JSON object\n  local result\n  local status, err = pcall(\n    function()\n      result = quarto.json.decode(res)\n    end\n  )\n  if not status then\n    throw_quarto_error(\n      \"Error decoding JSON response from `shinylive` \" .. language .. \" package.\",\n      \"Error decoding JSON response from `shinylive` \" .. language .. \" package.\\n\",\n      \"JSON string being parsed:\\n\",\n      res,\n      \"Error:\\n\",\n      err\n    )\n  end\n  return result\nend\n\nfunction parseVersion(versionTxt)\n  local versionParts = {}\n  for part in string.gmatch(versionTxt, \"%d+\") do\n    table.insert(versionParts, tonumber(part))\n  end\n  local ret = {\n    major = nil,\n    minor = nil,\n    patch = nil,\n    extra = nil,\n    length = #versionParts,\n    str = versionTxt\n  }\n\n  if ret.length >= 1 then\n    ret.major = versionParts[1]\n    if ret.length >= 2 then\n      ret.minor = versionParts[2]\n      if ret.length >= 3 then\n        ret.patch = versionParts[3]\n        if ret.length >= 4 then\n          ret.extra = versionParts[4]\n        end\n      end\n    end\n  end\n\n  return ret\nend\n\n-- If verA > verB, return 1\n-- If verA == verB, return 0\n-- If verA < verB, return -1\nfunction compareVersions(verA, verB)\n  if verA.major == nil or verB.major == nil then\n    throw_quarto_error(\"Trying to compare an invalid version: \" .. verA.str .. \" or \" .. verB.str)\n  end\n\n  for index, key in ipairs({ \"major\", \"minor\", \"patch\", \"extra\" }) do\n    local partDiff = compareVersionPart(verA[key], verB[key])\n    if partDiff ~= 0 then\n      return partDiff\n    end\n  end\n\n  -- Equal!\n  return 0\nend\n\nfunction compareVersionPart(aPart, bPart)\n  if aPart == nil and bPart == nil then\n    return 0\n  end\n  if aPart == nil then\n    return -1\n  end\n  if bPart == nil then\n    return 1\n  end\n  if aPart > bPart then\n    return 1\n  elseif aPart < bPart then\n    return -1\n  end\n\n  -- Equal!\n  return 0\nend\n\nfunction ensurePyshinyliveVersion(language)\n  -- Quit early if not python\n  if language ~= \"python\" then\n    return\n  end\n  -- Quit early if already completed check\n  if hasDoneSetup.python_version then\n    return\n  end\n  hasDoneSetup.python_version = true\n\n  -- Verify that min python shinylive version is met\n  pyShinyliveVersion = callShinylive(language, { \"--version\" }, \"\", false)\n  -- Remove trailing whitespace\n  pyShinyliveVersion = pyShinyliveVersion:gsub(\"%s+$\", \"\")\n  -- Parse version into table\n  parsedVersion = parseVersion(pyShinyliveVersion)\n\n  -- Verify that the version is at least 0.1.0\n  if\n      (parsedVersion.length < 3) or\n      -- Major and minor values are 0. Ex: 0.0.18\n      (parsedVersion.major == 0 and parsedVersion.minor == 0)\n  then\n    assert(false,\n      \"\\nThe shinylive Python package must be at least version v0.1.0 to be used in a Quarto document.\" ..\n      \"\\n\\nInstalled Python Shinylive package version: \" .. pyShinyliveVersion ..\n      \"\\n\\nPlease upgrade the Python Shinylive package by running:\" ..\n      \"\\n\\tpip install --upgrade shinylive\" ..\n      \"\\n\\n(If you are using a virtual environment, please activate it before running the command above.)\"\n    )\n  end\nend\n\n-- Do one-time setup for language agnostic html dependencies.\n-- This should only be called once per document\n-- @param language: \"python\" or \"r\"\nfunction ensureBaseSetup(language)\n  -- Quit early if already done\n  if hasDoneSetup.base then\n    return\n  end\n  hasDoneSetup.base = true\n\n  -- Find the path to codeblock-to-json.ts and save it for later use.\n  local infoObj = callShinylive(language, { \"extension\", \"info\" })\n  -- Store the path to codeblock-to-json.ts for later use\n  codeblockScript = infoObj.scripts['codeblock-to-json']\n  -- Store the version info for later use\n  versions[language] = { version = infoObj.version, assets_version = infoObj.assets_version }\n\n  -- Add language-agnostic dependencies\n  local baseDeps = getShinyliveBaseDeps(language)\n  for idx, dep in ipairs(baseDeps) do\n    quarto.doc.add_html_dependency(dep)\n  end\n\n  -- Add ext css dependency\n  quarto.doc.add_html_dependency(\n    {\n      name = \"shinylive-quarto-css\",\n      stylesheets = { \"resources/css/shinylive-quarto.css\" }\n    }\n  )\nend\n\n-- Do one-time setup for language specific html dependencies.\n-- This should only be called once per document\n-- @param language: \"python\" or \"r\"\nfunction ensureLanguageSetup(language)\n  -- Min version check must be done first\n  ensurePyshinyliveVersion(language)\n\n  -- Make sure the base setup is done before the langage setup\n  ensureBaseSetup(language)\n\n  if hasDoneSetup[language] then\n    return\n  end\n  hasDoneSetup[language] = true\n\n  -- Only get the asset version value if it hasn't been retrieved yet.\n  if versions[language] == nil then\n    local infoObj = callShinylive(language, { \"extension\", \"info\" })\n    versions[language] = { version = infoObj.version, assets_version = infoObj.assets_version }\n  end\n  -- Verify that the r-shinylive and py-shinylive supported assets versions match\n  if\n      (versions.r and versions.python) and\n      ---@diagnostic disable-next-line: undefined-field\n      versions.r.assets_version ~= versions.python.assets_version\n  then\n    local parsedRAssetsVersion = parseVersion(versions.r.assets_version)\n    local parsedPythonAssetsVersion = parseVersion(versions.python.assets_version)\n\n    local verDiff = compareVersions(parsedRAssetsVersion, parsedPythonAssetsVersion)\n    local verDiffStr = \"\"\n    if verDiff == 1 then\n      -- R shinylive supports higher version of assets. Upgrade python shinylive\n      verDiffStr =\n          \"The currently installed python shinylive package supports a lower assets version, \" ..\n          \"therefore we recommend updating your python shinylive package to the latest version.\"\n    elseif verDiff == -1 then\n      -- Python shinylive supports higher version of assets. Upgrade R shinylive\n      verDiffStr =\n          \"The currently installed R shinylive package supports a lower assets version, \" ..\n          \"therefore we recommend updating your R shinylive package to the latest version.\"\n    end\n\n    throw_quarto_error(\n      \"The shinylive R and Python packages must support the same Shinylive Assets version to be used in the same Quarto document.\",\n      \"The shinylive R and Python packages must support the same Shinylive Assets version to be used in the same Quarto document.\\n\",\n      \"\\n\",\n      \"Python shinylive package version: \",\n      ---@diagnostic disable-next-line: undefined-field\n      versions.python.version .. \" ; Supported assets version: \" .. versions.python.assets_version .. \"\\n\",\n      \"R shinylive package version:       \" ..\n      ---@diagnostic disable-next-line: undefined-field\n      versions.r.version .. \" ; Supported assets version: \" .. versions.r.assets_version .. \"\\n\",\n      \"\\n\",\n      verDiffStr .. \"\\n\",\n      \"\\n\",\n      \"To update your R Shinylive package, run:\\n\",\n      \"\\tR -e \\\"install.packages('shinylive')\\\"\\n\",\n      \"\\n\",\n      \"To update your Python Shinylive package, run:\\n\",\n      \"\\tpip install --upgrade shinylive\\n\",\n      \"(If you are using a virtual environment, please activate it before running the command above.)\\n\",\n      \"\\n\"\n    )\n  end\n\n  -- Add language-specific dependencies\n  local langResources = callShinylive(language, { \"extension\", \"language-resources\" })\n  for idx, resourceDep in ipairs(langResources) do\n    -- No need to check for uniqueness.\n    -- Each resource is only be added once and should already be unique.\n    quarto.doc.attach_to_dependency(\"shinylive\", resourceDep)\n  end\nend\n\nfunction getShinyliveBaseDeps(language)\n  -- Relative path from the current page to the root of the site. This is needed\n  -- to find out where shinylive-sw.js is, relative to the current page.\n  if quarto.project.offset == nil then\n    throw_quarto_error(\"The `shinylive` extension must be used in a Quarto project directory (with a _quarto.yml file).\")\n  end\n  local deps = callShinylive(\n    language,\n    { \"extension\", \"base-htmldeps\", \"--sw-dir\", quarto.project.offset },\n    \"\"\n  )\n  return deps\nend\n\n-- Legacy quarto cli location\nquarto_cli_path = \"quarto\"\nif quarto.config ~= nil and quarto.config.cli_path ~= nil then\n  -- * 2024/05/03 - Christophe:\n  --   `quarto run` needs to be called using the same quarto CLI that called the extension.\n  --   This is done by using `quarto.config.cli_path()` from Quarto 1.5 Lua API.\n  --   https://github.com/quarto-dev/quarto-cli/pull/9576\n  quarto_cli_path = quarto.config.cli_path()\nend\n\nreturn {\n  {\n    CodeBlock = function(el)\n      if not el.attr then\n        -- Not a shinylive codeblock, return\n        return\n      end\n\n      local language\n      if el.attr.classes:includes(\"{shinylive-r}\") then\n        language = \"r\"\n      elseif el.attr.classes:includes(\"{shinylive-python}\") then\n        language = \"python\"\n      else\n        -- Not a shinylive codeblock, return\n        return\n      end\n      -- Setup language and language-agnostic dependencies\n      ensureLanguageSetup(language)\n\n      -- Convert code block to JSON string in the same format as app.json.\n      local parsedCodeblockJson = pandoc.pipe(\n        quarto_cli_path,\n        { \"run\", codeblockScript, language },\n        el.text\n      )\n\n      -- This contains \"files\" and \"quartoArgs\" keys.\n      local parsedCodeblock = quarto.json.decode(parsedCodeblockJson)\n\n      -- Find Python package dependencies for the current app.\n      local appDeps = callShinylive(\n        language,\n        { \"extension\", \"app-resources\" },\n        -- Send as piped input to the shinylive command\n        quarto.json.encode(parsedCodeblock[\"files\"])\n      )\n\n      -- Add app specific dependencies\n      for idx, dep in ipairs(appDeps) do\n        if not appSpecificDeps[dep.name] then\n          appSpecificDeps[dep.name] = true\n          quarto.doc.attach_to_dependency(\"shinylive\", dep)\n        end\n      end\n\n      if el.attr.classes:includes(\"{shinylive-python}\") then\n        el.attributes.engine = \"python\"\n        el.attr.classes = pandoc.List()\n        el.attr.classes:insert(\"shinylive-python\")\n      elseif el.attr.classes:includes(\"{shinylive-r}\") then\n        el.attributes.engine = \"r\"\n        el.attr.classes = pandoc.List()\n        el.attr.classes:insert(\"shinylive-r\")\n      end\n      \n      el.text = \n        \"#| '!! shinylive warning !!': |\\n\"..\n        \"#|   shinylive does not work in self-contained HTML documents.\\n\" .. \n        \"#|   Please set `embed-resources: false` in your metadata.\\n\" ..\n        el.text\n      \n      return el\n    end\n  }\n}\n","type":"text"},{"name":"example.R","content":"library(shiny)\nlibrary(ggplot2)\n\nui <- fluidPage(\n  titlePanel(\"Shiny App with Sidebar and Four Panels\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"xvar\", \"X-axis variable:\",\n                  choices = names(mtcars), selected = \"wt\"),\n      selectInput(\"yvar\", \"Y-axis variable:\",\n                  choices = names(mtcars), selected = \"mpg\"),\n      selectInput(\"colorvar\", \"Color by:\",\n                  choices = names(mtcars), selected = \"cyl\")\n    ),\n    \n    mainPanel(\n      fluidRow(\n        column(6, plotOutput(\"plot1\")),\n        column(6, plotOutput(\"plot2\"))\n      ),\n      fluidRow(\n        column(6, plotOutput(\"plot3\")),\n        column(6, plotOutput(\"plot4\"))\n      )\n    )\n  )\n)\n\nserver <- function(input, output) {\n  \n  base_plot <- reactive({\n    ggplot(mtcars, aes_string(x = input$xvar, y = input$yvar, color = input$colorvar)) +\n      geom_point(size = 3) +\n      theme_minimal()\n  })\n  \n  output$plot1 <- renderPlot({\n    base_plot() + ggtitle(\"Plot 1\")\n  })\n  \n  output$plot2 <- renderPlot({\n    base_plot() + ggtitle(\"Plot 2\")\n  })\n  \n  output$plot3 <- renderPlot({\n    base_plot() + ggtitle(\"Plot 3\")\n  })\n  \n  output$plot4 <- renderPlot({\n    base_plot() + ggtitle(\"Plot 4\")\n  })\n}\n\nshinyApp(ui = ui, server = server)\n","type":"text"},{"name":"shiny.Rproj","content":"Version: 1.0\n\nRestoreWorkspace: Default\nSaveWorkspace: Default\nAlwaysSaveHistory: Default\n\nEnableCodeIndexing: Yes\nUseSpacesForTab: Yes\nNumSpacesForTab: 2\nEncoding: UTF-8\n\nRnwWeave: Sweave\nLaTeX: pdfLaTeX\n","type":"text"},{"name":"shinylive-sw.js","content":"// Shinylive 0.9.1\n// Copyright 2024 Posit, PBC\nvar __require = /* @__PURE__ */ ((x2) => typeof require !== \"undefined\" ? require : typeof Proxy !== \"undefined\" ? new Proxy(x2, {\n  get: (a2, b) => (typeof require !== \"undefined\" ? require : a2)[b]\n}) : x2)(function(x2) {\n  if (typeof require !== \"undefined\")\n    return require.apply(this, arguments);\n  throw Error('Dynamic require of \"' + x2 + '\" is not supported');\n});\n\n// src/assets/shinylive-inject-socket.txt\nvar shinylive_inject_socket_default = '// src/messageportwebsocket.ts\\nvar MessagePortWebSocket = class extends EventTarget {\\n  constructor(port) {\\n    super();\\n    this.readyState = 0;\\n    this.addEventListener(\"open\", (e) => {\\n      if (this.onopen) {\\n        this.onopen(e);\\n      }\\n    });\\n    this.addEventListener(\"message\", (e) => {\\n      if (this.onmessage) {\\n        this.onmessage(e);\\n      }\\n    });\\n    this.addEventListener(\"error\", (e) => {\\n      if (this.onerror) {\\n        this.onerror(e);\\n      }\\n    });\\n    this.addEventListener(\"close\", (e) => {\\n      if (this.onclose) {\\n        this.onclose(e);\\n      }\\n    });\\n    this._port = port;\\n    port.addEventListener(\"message\", this._onMessage.bind(this));\\n    port.start();\\n  }\\n  // Call on the server side of the connection, to tell the client that\\n  // the connection has been established.\\n  accept() {\\n    if (this.readyState !== 0) {\\n      return;\\n    }\\n    this.readyState = 1;\\n    this._port.postMessage({ type: \"open\" });\\n  }\\n  send(data) {\\n    if (this.readyState === 0) {\\n      throw new DOMException(\\n        \"Can\\'t send messages while WebSocket is in CONNECTING state\",\\n        \"InvalidStateError\"\\n      );\\n    }\\n    if (this.readyState > 1) {\\n      return;\\n    }\\n    this._port.postMessage({ type: \"message\", value: { data } });\\n  }\\n  close(code, reason) {\\n    if (this.readyState > 1) {\\n      return;\\n    }\\n    this.readyState = 2;\\n    this._port.postMessage({ type: \"close\", value: { code, reason } });\\n    this.readyState = 3;\\n    this.dispatchEvent(new CloseEvent(\"close\", { code, reason }));\\n  }\\n  _onMessage(e) {\\n    const event = e.data;\\n    switch (event.type) {\\n      case \"open\":\\n        if (this.readyState === 0) {\\n          this.readyState = 1;\\n          this.dispatchEvent(new Event(\"open\"));\\n          return;\\n        }\\n        break;\\n      case \"message\":\\n        if (this.readyState === 1) {\\n          this.dispatchEvent(new MessageEvent(\"message\", { ...event.value }));\\n          return;\\n        }\\n        break;\\n      case \"close\":\\n        if (this.readyState < 3) {\\n          this.readyState = 3;\\n          this.dispatchEvent(new CloseEvent(\"close\", { ...event.value }));\\n          return;\\n        }\\n        break;\\n    }\\n    this._reportError(\\n      `Unexpected event \\'${event.type}\\' while in readyState ${this.readyState}`,\\n      1002\\n    );\\n  }\\n  _reportError(message, code) {\\n    this.dispatchEvent(new ErrorEvent(\"error\", { message }));\\n    if (typeof code === \"number\") {\\n      this.close(code, message);\\n    }\\n  }\\n};\\n\\n// src/shinylive-inject-socket.ts\\nwindow.Shiny.createSocket = function() {\\n  const channel = new MessageChannel();\\n  window.parent.postMessage(\\n    {\\n      type: \"openChannel\",\\n      // Infer app name from path: \"/foo/app_abc123/\"\" => \"app_abc123\"\\n      appName: window.location.pathname.replace(\\n        new RegExp(\".*/([^/]+)/$\"),\\n        \"$1\"\\n      ),\\n      path: \"/websocket/\"\\n    },\\n    \"*\",\\n    [channel.port2]\\n  );\\n  return new MessagePortWebSocket(channel.port1);\\n};\\n';\n\n// src/utils.ts\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\nfunction dirname(path) {\n  if (path === \"/\" || path === \"\") {\n    return \"\";\n  }\n  return path.replace(/[/]?[^/]+[/]?$/, \"\");\n}\nfunction uint8ArrayToString(buf) {\n  let result = \"\";\n  for (let i = 0; i < buf.length; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n// node_modules/webr/dist/webr.mjs\nvar sn = Object.create;\nvar Zr = Object.defineProperty;\nvar nn = Object.getOwnPropertyDescriptor;\nvar on = Object.getOwnPropertyNames;\nvar an = Object.getPrototypeOf;\nvar ln = Object.prototype.hasOwnProperty;\nvar B = ((s) => typeof __require < \"u\" ? __require : typeof Proxy < \"u\" ? new Proxy(s, { get: (e, t) => (typeof __require < \"u\" ? __require : e)[t] }) : s)(function(s) {\n  if (typeof __require < \"u\")\n    return __require.apply(this, arguments);\n  throw new Error('Dynamic require of \"' + s + '\" is not supported');\n});\nvar S = (s, e) => () => (e || s((e = { exports: {} }).exports, e), e.exports);\nvar cn = (s, e, t, r) => {\n  if (e && typeof e == \"object\" || typeof e == \"function\")\n    for (let n of on(e))\n      !ln.call(s, n) && n !== t && Zr(s, n, { get: () => e[n], enumerable: !(r = nn(e, n)) || r.enumerable });\n  return s;\n};\nvar oe = (s, e, t) => (t = s != null ? sn(an(s)) : {}, cn(e || !s || !s.__esModule ? Zr(t, \"default\", { value: s, enumerable: true }) : t, s));\nvar fr = (s, e, t) => {\n  if (!e.has(s))\n    throw TypeError(\"Cannot \" + t);\n};\nvar a = (s, e, t) => (fr(s, e, \"read from private field\"), t ? t.call(s) : e.get(s));\nvar u = (s, e, t) => {\n  if (e.has(s))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  e instanceof WeakSet ? e.add(s) : e.set(s, t);\n};\nvar d = (s, e, t, r) => (fr(s, e, \"write to private field\"), r ? r.call(s, t) : e.set(s, t), t);\nvar E = (s, e, t) => (fr(s, e, \"access private method\"), t);\nvar He = S((C) => {\n  \"use strict\";\n  Object.defineProperty(C, \"__esModule\", { value: true });\n  C.getUint64 = C.getInt64 = C.setInt64 = C.setUint64 = C.UINT32_MAX = void 0;\n  C.UINT32_MAX = 4294967295;\n  function fn(s, e, t) {\n    let r = t / 4294967296, n = t;\n    s.setUint32(e, r), s.setUint32(e + 4, n);\n  }\n  C.setUint64 = fn;\n  function Rn(s, e, t) {\n    let r = Math.floor(t / 4294967296), n = t;\n    s.setUint32(e, r), s.setUint32(e + 4, n);\n  }\n  C.setInt64 = Rn;\n  function mn(s, e) {\n    let t = s.getInt32(e), r = s.getUint32(e + 4);\n    return t * 4294967296 + r;\n  }\n  C.getInt64 = mn;\n  function gn(s, e) {\n    let t = s.getUint32(e), r = s.getUint32(e + 4);\n    return t * 4294967296 + r;\n  }\n  C.getUint64 = gn;\n});\nvar Ot = S((M) => {\n  \"use strict\";\n  var _r, Sr, kr;\n  Object.defineProperty(M, \"__esModule\", { value: true });\n  M.utf8DecodeTD = M.TEXT_DECODER_THRESHOLD = M.utf8DecodeJs = M.utf8EncodeTE = M.TEXT_ENCODER_THRESHOLD = M.utf8EncodeJs = M.utf8Count = void 0;\n  var ps = He(), At = (typeof process > \"u\" || ((_r = process == null ? void 0 : process.env) === null || _r === void 0 ? void 0 : _r.TEXT_ENCODING) !== \"never\") && typeof TextEncoder < \"u\" && typeof TextDecoder < \"u\";\n  function bn(s) {\n    let e = s.length, t = 0, r = 0;\n    for (; r < e; ) {\n      let n = s.charCodeAt(r++);\n      if (n & 4294967168)\n        if (!(n & 4294965248))\n          t += 2;\n        else {\n          if (n >= 55296 && n <= 56319 && r < e) {\n            let o = s.charCodeAt(r);\n            (o & 64512) === 56320 && (++r, n = ((n & 1023) << 10) + (o & 1023) + 65536);\n          }\n          n & 4294901760 ? t += 4 : t += 3;\n        }\n      else {\n        t++;\n        continue;\n      }\n    }\n    return t;\n  }\n  M.utf8Count = bn;\n  function wn(s, e, t) {\n    let r = s.length, n = t, o = 0;\n    for (; o < r; ) {\n      let i = s.charCodeAt(o++);\n      if (i & 4294967168)\n        if (!(i & 4294965248))\n          e[n++] = i >> 6 & 31 | 192;\n        else {\n          if (i >= 55296 && i <= 56319 && o < r) {\n            let l = s.charCodeAt(o);\n            (l & 64512) === 56320 && (++o, i = ((i & 1023) << 10) + (l & 1023) + 65536);\n          }\n          i & 4294901760 ? (e[n++] = i >> 18 & 7 | 240, e[n++] = i >> 12 & 63 | 128, e[n++] = i >> 6 & 63 | 128) : (e[n++] = i >> 12 & 15 | 224, e[n++] = i >> 6 & 63 | 128);\n        }\n      else {\n        e[n++] = i;\n        continue;\n      }\n      e[n++] = i & 63 | 128;\n    }\n  }\n  M.utf8EncodeJs = wn;\n  var ze = At ? new TextEncoder() : void 0;\n  M.TEXT_ENCODER_THRESHOLD = At ? typeof process < \"u\" && ((Sr = process == null ? void 0 : process.env) === null || Sr === void 0 ? void 0 : Sr.TEXT_ENCODING) !== \"force\" ? 200 : 0 : ps.UINT32_MAX;\n  function xn(s, e, t) {\n    e.set(ze.encode(s), t);\n  }\n  function vn(s, e, t) {\n    ze.encodeInto(s, e.subarray(t));\n  }\n  M.utf8EncodeTE = ze != null && ze.encodeInto ? vn : xn;\n  var En = 4096;\n  function Pn(s, e, t) {\n    let r = e, n = r + t, o = [], i = \"\";\n    for (; r < n; ) {\n      let l = s[r++];\n      if (!(l & 128))\n        o.push(l);\n      else if ((l & 224) === 192) {\n        let p = s[r++] & 63;\n        o.push((l & 31) << 6 | p);\n      } else if ((l & 240) === 224) {\n        let p = s[r++] & 63, D = s[r++] & 63;\n        o.push((l & 31) << 12 | p << 6 | D);\n      } else if ((l & 248) === 240) {\n        let p = s[r++] & 63, D = s[r++] & 63, b = s[r++] & 63, j = (l & 7) << 18 | p << 12 | D << 6 | b;\n        j > 65535 && (j -= 65536, o.push(j >>> 10 & 1023 | 55296), j = 56320 | j & 1023), o.push(j);\n      } else\n        o.push(l);\n      o.length >= En && (i += String.fromCharCode(...o), o.length = 0);\n    }\n    return o.length > 0 && (i += String.fromCharCode(...o)), i;\n  }\n  M.utf8DecodeJs = Pn;\n  var Tn = At ? new TextDecoder() : null;\n  M.TEXT_DECODER_THRESHOLD = At ? typeof process < \"u\" && ((kr = process == null ? void 0 : process.env) === null || kr === void 0 ? void 0 : kr.TEXT_DECODER) !== \"force\" ? 200 : 0 : ps.UINT32_MAX;\n  function _n(s, e, t) {\n    let r = s.subarray(e, e + t);\n    return Tn.decode(r);\n  }\n  M.utf8DecodeTD = _n;\n});\nvar Dr = S((It) => {\n  \"use strict\";\n  Object.defineProperty(It, \"__esModule\", { value: true });\n  It.ExtData = void 0;\n  var Mr = class {\n    constructor(e, t) {\n      this.type = e, this.data = t;\n    }\n  };\n  It.ExtData = Mr;\n});\nvar Ct = S((Ut) => {\n  \"use strict\";\n  Object.defineProperty(Ut, \"__esModule\", { value: true });\n  Ut.DecodeError = void 0;\n  var we = class extends Error {\n    constructor(e) {\n      super(e);\n      let t = Object.create(we.prototype);\n      Object.setPrototypeOf(this, t), Object.defineProperty(this, \"name\", { configurable: true, enumerable: false, value: we.name });\n    }\n  };\n  Ut.DecodeError = we;\n});\nvar Wr = S((_) => {\n  \"use strict\";\n  Object.defineProperty(_, \"__esModule\", { value: true });\n  _.timestampExtension = _.decodeTimestampExtension = _.decodeTimestampToTimeSpec = _.encodeTimestampExtension = _.encodeDateToTimeSpec = _.encodeTimeSpecToTimestamp = _.EXT_TIMESTAMP = void 0;\n  var Sn = Ct(), ds = He();\n  _.EXT_TIMESTAMP = -1;\n  var kn = 4294967296 - 1, Mn = 17179869184 - 1;\n  function hs({ sec: s, nsec: e }) {\n    if (s >= 0 && e >= 0 && s <= Mn)\n      if (e === 0 && s <= kn) {\n        let t = new Uint8Array(4);\n        return new DataView(t.buffer).setUint32(0, s), t;\n      } else {\n        let t = s / 4294967296, r = s & 4294967295, n = new Uint8Array(8), o = new DataView(n.buffer);\n        return o.setUint32(0, e << 2 | t & 3), o.setUint32(4, r), n;\n      }\n    else {\n      let t = new Uint8Array(12), r = new DataView(t.buffer);\n      return r.setUint32(0, e), (0, ds.setInt64)(r, 4, s), t;\n    }\n  }\n  _.encodeTimeSpecToTimestamp = hs;\n  function ys(s) {\n    let e = s.getTime(), t = Math.floor(e / 1e3), r = (e - t * 1e3) * 1e6, n = Math.floor(r / 1e9);\n    return { sec: t + n, nsec: r - n * 1e9 };\n  }\n  _.encodeDateToTimeSpec = ys;\n  function fs(s) {\n    if (s instanceof Date) {\n      let e = ys(s);\n      return hs(e);\n    } else\n      return null;\n  }\n  _.encodeTimestampExtension = fs;\n  function Rs(s) {\n    let e = new DataView(s.buffer, s.byteOffset, s.byteLength);\n    switch (s.byteLength) {\n      case 4:\n        return { sec: e.getUint32(0), nsec: 0 };\n      case 8: {\n        let t = e.getUint32(0), r = e.getUint32(4), n = (t & 3) * 4294967296 + r, o = t >>> 2;\n        return { sec: n, nsec: o };\n      }\n      case 12: {\n        let t = (0, ds.getInt64)(e, 4), r = e.getUint32(0);\n        return { sec: t, nsec: r };\n      }\n      default:\n        throw new Sn.DecodeError(`Unrecognized data size for timestamp (expected 4, 8, or 12): ${s.length}`);\n    }\n  }\n  _.decodeTimestampToTimeSpec = Rs;\n  function ms(s) {\n    let e = Rs(s);\n    return new Date(e.sec * 1e3 + e.nsec / 1e6);\n  }\n  _.decodeTimestampExtension = ms;\n  _.timestampExtension = { type: _.EXT_TIMESTAMP, encode: fs, decode: ms };\n});\nvar Bt = S((Nt) => {\n  \"use strict\";\n  Object.defineProperty(Nt, \"__esModule\", { value: true });\n  Nt.ExtensionCodec = void 0;\n  var jt = Dr(), Dn = Wr(), Xe = class {\n    constructor() {\n      this.builtInEncoders = [], this.builtInDecoders = [], this.encoders = [], this.decoders = [], this.register(Dn.timestampExtension);\n    }\n    register({ type: e, encode: t, decode: r }) {\n      if (e >= 0)\n        this.encoders[e] = t, this.decoders[e] = r;\n      else {\n        let n = 1 + e;\n        this.builtInEncoders[n] = t, this.builtInDecoders[n] = r;\n      }\n    }\n    tryToEncode(e, t) {\n      for (let r = 0; r < this.builtInEncoders.length; r++) {\n        let n = this.builtInEncoders[r];\n        if (n != null) {\n          let o = n(e, t);\n          if (o != null) {\n            let i = -1 - r;\n            return new jt.ExtData(i, o);\n          }\n        }\n      }\n      for (let r = 0; r < this.encoders.length; r++) {\n        let n = this.encoders[r];\n        if (n != null) {\n          let o = n(e, t);\n          if (o != null) {\n            let i = r;\n            return new jt.ExtData(i, o);\n          }\n        }\n      }\n      return e instanceof jt.ExtData ? e : null;\n    }\n    decode(e, t, r) {\n      let n = t < 0 ? this.builtInDecoders[-1 - t] : this.decoders[t];\n      return n ? n(e, t, r) : new jt.ExtData(t, e);\n    }\n  };\n  Nt.ExtensionCodec = Xe;\n  Xe.defaultCodec = new Xe();\n});\nvar Ar = S((xe) => {\n  \"use strict\";\n  Object.defineProperty(xe, \"__esModule\", { value: true });\n  xe.createDataView = xe.ensureUint8Array = void 0;\n  function gs(s) {\n    return s instanceof Uint8Array ? s : ArrayBuffer.isView(s) ? new Uint8Array(s.buffer, s.byteOffset, s.byteLength) : s instanceof ArrayBuffer ? new Uint8Array(s) : Uint8Array.from(s);\n  }\n  xe.ensureUint8Array = gs;\n  function Wn(s) {\n    if (s instanceof ArrayBuffer)\n      return new DataView(s);\n    let e = gs(s);\n    return new DataView(e.buffer, e.byteOffset, e.byteLength);\n  }\n  xe.createDataView = Wn;\n});\nvar Ir = S((J) => {\n  \"use strict\";\n  Object.defineProperty(J, \"__esModule\", { value: true });\n  J.Encoder = J.DEFAULT_INITIAL_BUFFER_SIZE = J.DEFAULT_MAX_DEPTH = void 0;\n  var Ge = Ot(), An = Bt(), bs = He(), On = Ar();\n  J.DEFAULT_MAX_DEPTH = 100;\n  J.DEFAULT_INITIAL_BUFFER_SIZE = 2048;\n  var Or = class {\n    constructor(e = An.ExtensionCodec.defaultCodec, t = void 0, r = J.DEFAULT_MAX_DEPTH, n = J.DEFAULT_INITIAL_BUFFER_SIZE, o = false, i = false, l = false, p = false) {\n      this.extensionCodec = e, this.context = t, this.maxDepth = r, this.initialBufferSize = n, this.sortKeys = o, this.forceFloat32 = i, this.ignoreUndefined = l, this.forceIntegerToFloat = p, this.pos = 0, this.view = new DataView(new ArrayBuffer(this.initialBufferSize)), this.bytes = new Uint8Array(this.view.buffer);\n    }\n    reinitializeState() {\n      this.pos = 0;\n    }\n    encodeSharedRef(e) {\n      return this.reinitializeState(), this.doEncode(e, 1), this.bytes.subarray(0, this.pos);\n    }\n    encode(e) {\n      return this.reinitializeState(), this.doEncode(e, 1), this.bytes.slice(0, this.pos);\n    }\n    doEncode(e, t) {\n      if (t > this.maxDepth)\n        throw new Error(`Too deep objects in depth ${t}`);\n      e == null ? this.encodeNil() : typeof e == \"boolean\" ? this.encodeBoolean(e) : typeof e == \"number\" ? this.encodeNumber(e) : typeof e == \"string\" ? this.encodeString(e) : this.encodeObject(e, t);\n    }\n    ensureBufferSizeToWrite(e) {\n      let t = this.pos + e;\n      this.view.byteLength < t && this.resizeBuffer(t * 2);\n    }\n    resizeBuffer(e) {\n      let t = new ArrayBuffer(e), r = new Uint8Array(t), n = new DataView(t);\n      r.set(this.bytes), this.view = n, this.bytes = r;\n    }\n    encodeNil() {\n      this.writeU8(192);\n    }\n    encodeBoolean(e) {\n      e === false ? this.writeU8(194) : this.writeU8(195);\n    }\n    encodeNumber(e) {\n      Number.isSafeInteger(e) && !this.forceIntegerToFloat ? e >= 0 ? e < 128 ? this.writeU8(e) : e < 256 ? (this.writeU8(204), this.writeU8(e)) : e < 65536 ? (this.writeU8(205), this.writeU16(e)) : e < 4294967296 ? (this.writeU8(206), this.writeU32(e)) : (this.writeU8(207), this.writeU64(e)) : e >= -32 ? this.writeU8(224 | e + 32) : e >= -128 ? (this.writeU8(208), this.writeI8(e)) : e >= -32768 ? (this.writeU8(209), this.writeI16(e)) : e >= -2147483648 ? (this.writeU8(210), this.writeI32(e)) : (this.writeU8(211), this.writeI64(e)) : this.forceFloat32 ? (this.writeU8(202), this.writeF32(e)) : (this.writeU8(203), this.writeF64(e));\n    }\n    writeStringHeader(e) {\n      if (e < 32)\n        this.writeU8(160 + e);\n      else if (e < 256)\n        this.writeU8(217), this.writeU8(e);\n      else if (e < 65536)\n        this.writeU8(218), this.writeU16(e);\n      else if (e < 4294967296)\n        this.writeU8(219), this.writeU32(e);\n      else\n        throw new Error(`Too long string: ${e} bytes in UTF-8`);\n    }\n    encodeString(e) {\n      if (e.length > Ge.TEXT_ENCODER_THRESHOLD) {\n        let n = (0, Ge.utf8Count)(e);\n        this.ensureBufferSizeToWrite(5 + n), this.writeStringHeader(n), (0, Ge.utf8EncodeTE)(e, this.bytes, this.pos), this.pos += n;\n      } else {\n        let n = (0, Ge.utf8Count)(e);\n        this.ensureBufferSizeToWrite(5 + n), this.writeStringHeader(n), (0, Ge.utf8EncodeJs)(e, this.bytes, this.pos), this.pos += n;\n      }\n    }\n    encodeObject(e, t) {\n      let r = this.extensionCodec.tryToEncode(e, this.context);\n      if (r != null)\n        this.encodeExtension(r);\n      else if (Array.isArray(e))\n        this.encodeArray(e, t);\n      else if (ArrayBuffer.isView(e))\n        this.encodeBinary(e);\n      else if (typeof e == \"object\")\n        this.encodeMap(e, t);\n      else\n        throw new Error(`Unrecognized object: ${Object.prototype.toString.apply(e)}`);\n    }\n    encodeBinary(e) {\n      let t = e.byteLength;\n      if (t < 256)\n        this.writeU8(196), this.writeU8(t);\n      else if (t < 65536)\n        this.writeU8(197), this.writeU16(t);\n      else if (t < 4294967296)\n        this.writeU8(198), this.writeU32(t);\n      else\n        throw new Error(`Too large binary: ${t}`);\n      let r = (0, On.ensureUint8Array)(e);\n      this.writeU8a(r);\n    }\n    encodeArray(e, t) {\n      let r = e.length;\n      if (r < 16)\n        this.writeU8(144 + r);\n      else if (r < 65536)\n        this.writeU8(220), this.writeU16(r);\n      else if (r < 4294967296)\n        this.writeU8(221), this.writeU32(r);\n      else\n        throw new Error(`Too large array: ${r}`);\n      for (let n of e)\n        this.doEncode(n, t + 1);\n    }\n    countWithoutUndefined(e, t) {\n      let r = 0;\n      for (let n of t)\n        e[n] !== void 0 && r++;\n      return r;\n    }\n    encodeMap(e, t) {\n      let r = Object.keys(e);\n      this.sortKeys && r.sort();\n      let n = this.ignoreUndefined ? this.countWithoutUndefined(e, r) : r.length;\n      if (n < 16)\n        this.writeU8(128 + n);\n      else if (n < 65536)\n        this.writeU8(222), this.writeU16(n);\n      else if (n < 4294967296)\n        this.writeU8(223), this.writeU32(n);\n      else\n        throw new Error(`Too large map object: ${n}`);\n      for (let o of r) {\n        let i = e[o];\n        this.ignoreUndefined && i === void 0 || (this.encodeString(o), this.doEncode(i, t + 1));\n      }\n    }\n    encodeExtension(e) {\n      let t = e.data.length;\n      if (t === 1)\n        this.writeU8(212);\n      else if (t === 2)\n        this.writeU8(213);\n      else if (t === 4)\n        this.writeU8(214);\n      else if (t === 8)\n        this.writeU8(215);\n      else if (t === 16)\n        this.writeU8(216);\n      else if (t < 256)\n        this.writeU8(199), this.writeU8(t);\n      else if (t < 65536)\n        this.writeU8(200), this.writeU16(t);\n      else if (t < 4294967296)\n        this.writeU8(201), this.writeU32(t);\n      else\n        throw new Error(`Too large extension object: ${t}`);\n      this.writeI8(e.type), this.writeU8a(e.data);\n    }\n    writeU8(e) {\n      this.ensureBufferSizeToWrite(1), this.view.setUint8(this.pos, e), this.pos++;\n    }\n    writeU8a(e) {\n      let t = e.length;\n      this.ensureBufferSizeToWrite(t), this.bytes.set(e, this.pos), this.pos += t;\n    }\n    writeI8(e) {\n      this.ensureBufferSizeToWrite(1), this.view.setInt8(this.pos, e), this.pos++;\n    }\n    writeU16(e) {\n      this.ensureBufferSizeToWrite(2), this.view.setUint16(this.pos, e), this.pos += 2;\n    }\n    writeI16(e) {\n      this.ensureBufferSizeToWrite(2), this.view.setInt16(this.pos, e), this.pos += 2;\n    }\n    writeU32(e) {\n      this.ensureBufferSizeToWrite(4), this.view.setUint32(this.pos, e), this.pos += 4;\n    }\n    writeI32(e) {\n      this.ensureBufferSizeToWrite(4), this.view.setInt32(this.pos, e), this.pos += 4;\n    }\n    writeF32(e) {\n      this.ensureBufferSizeToWrite(4), this.view.setFloat32(this.pos, e), this.pos += 4;\n    }\n    writeF64(e) {\n      this.ensureBufferSizeToWrite(8), this.view.setFloat64(this.pos, e), this.pos += 8;\n    }\n    writeU64(e) {\n      this.ensureBufferSizeToWrite(8), (0, bs.setUint64)(this.view, this.pos, e), this.pos += 8;\n    }\n    writeI64(e) {\n      this.ensureBufferSizeToWrite(8), (0, bs.setInt64)(this.view, this.pos, e), this.pos += 8;\n    }\n  };\n  J.Encoder = Or;\n});\nvar ws = S((Lt) => {\n  \"use strict\";\n  Object.defineProperty(Lt, \"__esModule\", { value: true });\n  Lt.encode = void 0;\n  var In = Ir(), Un = {};\n  function Cn(s, e = Un) {\n    return new In.Encoder(e.extensionCodec, e.context, e.maxDepth, e.initialBufferSize, e.sortKeys, e.forceFloat32, e.ignoreUndefined, e.forceIntegerToFloat).encodeSharedRef(s);\n  }\n  Lt.encode = Cn;\n});\nvar xs = S((Ft) => {\n  \"use strict\";\n  Object.defineProperty(Ft, \"__esModule\", { value: true });\n  Ft.prettyByte = void 0;\n  function jn(s) {\n    return `${s < 0 ? \"-\" : \"\"}0x${Math.abs(s).toString(16).padStart(2, \"0\")}`;\n  }\n  Ft.prettyByte = jn;\n});\nvar vs = S((qt) => {\n  \"use strict\";\n  Object.defineProperty(qt, \"__esModule\", { value: true });\n  qt.CachedKeyDecoder = void 0;\n  var Nn = Ot(), Bn = 16, Ln = 16, Ur = class {\n    constructor(e = Bn, t = Ln) {\n      this.maxKeyLength = e, this.maxLengthPerKey = t, this.hit = 0, this.miss = 0, this.caches = [];\n      for (let r = 0; r < this.maxKeyLength; r++)\n        this.caches.push([]);\n    }\n    canBeCached(e) {\n      return e > 0 && e <= this.maxKeyLength;\n    }\n    find(e, t, r) {\n      let n = this.caches[r - 1];\n      e:\n        for (let o of n) {\n          let i = o.bytes;\n          for (let l = 0; l < r; l++)\n            if (i[l] !== e[t + l])\n              continue e;\n          return o.str;\n        }\n      return null;\n    }\n    store(e, t) {\n      let r = this.caches[e.length - 1], n = { bytes: e, str: t };\n      r.length >= this.maxLengthPerKey ? r[Math.random() * r.length | 0] = n : r.push(n);\n    }\n    decode(e, t, r) {\n      let n = this.find(e, t, r);\n      if (n != null)\n        return this.hit++, n;\n      this.miss++;\n      let o = (0, Nn.utf8DecodeJs)(e, t, r), i = Uint8Array.prototype.slice.call(e, t, t + r);\n      return this.store(i, o), o;\n    }\n  };\n  qt.CachedKeyDecoder = Ur;\n});\nvar Vt = S((Q) => {\n  \"use strict\";\n  Object.defineProperty(Q, \"__esModule\", { value: true });\n  Q.Decoder = Q.DataViewIndexOutOfBoundsError = void 0;\n  var Cr = xs(), Fn = Bt(), ce = He(), jr = Ot(), Nr = Ar(), qn = vs(), K = Ct(), Vn = (s) => {\n    let e = typeof s;\n    return e === \"string\" || e === \"number\";\n  }, $e = -1, Lr = new DataView(new ArrayBuffer(0)), Jn = new Uint8Array(Lr.buffer);\n  Q.DataViewIndexOutOfBoundsError = (() => {\n    try {\n      Lr.getInt8(0);\n    } catch (s) {\n      return s.constructor;\n    }\n    throw new Error(\"never reached\");\n  })();\n  var Es = new Q.DataViewIndexOutOfBoundsError(\"Insufficient data\"), Hn = new qn.CachedKeyDecoder(), Br = class {\n    constructor(e = Fn.ExtensionCodec.defaultCodec, t = void 0, r = ce.UINT32_MAX, n = ce.UINT32_MAX, o = ce.UINT32_MAX, i = ce.UINT32_MAX, l = ce.UINT32_MAX, p = Hn) {\n      this.extensionCodec = e, this.context = t, this.maxStrLength = r, this.maxBinLength = n, this.maxArrayLength = o, this.maxMapLength = i, this.maxExtLength = l, this.keyDecoder = p, this.totalPos = 0, this.pos = 0, this.view = Lr, this.bytes = Jn, this.headByte = $e, this.stack = [];\n    }\n    reinitializeState() {\n      this.totalPos = 0, this.headByte = $e, this.stack.length = 0;\n    }\n    setBuffer(e) {\n      this.bytes = (0, Nr.ensureUint8Array)(e), this.view = (0, Nr.createDataView)(this.bytes), this.pos = 0;\n    }\n    appendBuffer(e) {\n      if (this.headByte === $e && !this.hasRemaining(1))\n        this.setBuffer(e);\n      else {\n        let t = this.bytes.subarray(this.pos), r = (0, Nr.ensureUint8Array)(e), n = new Uint8Array(t.length + r.length);\n        n.set(t), n.set(r, t.length), this.setBuffer(n);\n      }\n    }\n    hasRemaining(e) {\n      return this.view.byteLength - this.pos >= e;\n    }\n    createExtraByteError(e) {\n      let { view: t, pos: r } = this;\n      return new RangeError(`Extra ${t.byteLength - r} of ${t.byteLength} byte(s) found at buffer[${e}]`);\n    }\n    decode(e) {\n      this.reinitializeState(), this.setBuffer(e);\n      let t = this.doDecodeSync();\n      if (this.hasRemaining(1))\n        throw this.createExtraByteError(this.pos);\n      return t;\n    }\n    *decodeMulti(e) {\n      for (this.reinitializeState(), this.setBuffer(e); this.hasRemaining(1); )\n        yield this.doDecodeSync();\n    }\n    async decodeAsync(e) {\n      let t = false, r;\n      for await (let l of e) {\n        if (t)\n          throw this.createExtraByteError(this.totalPos);\n        this.appendBuffer(l);\n        try {\n          r = this.doDecodeSync(), t = true;\n        } catch (p) {\n          if (!(p instanceof Q.DataViewIndexOutOfBoundsError))\n            throw p;\n        }\n        this.totalPos += this.pos;\n      }\n      if (t) {\n        if (this.hasRemaining(1))\n          throw this.createExtraByteError(this.totalPos);\n        return r;\n      }\n      let { headByte: n, pos: o, totalPos: i } = this;\n      throw new RangeError(`Insufficient data in parsing ${(0, Cr.prettyByte)(n)} at ${i} (${o} in the current buffer)`);\n    }\n    decodeArrayStream(e) {\n      return this.decodeMultiAsync(e, true);\n    }\n    decodeStream(e) {\n      return this.decodeMultiAsync(e, false);\n    }\n    async *decodeMultiAsync(e, t) {\n      let r = t, n = -1;\n      for await (let o of e) {\n        if (t && n === 0)\n          throw this.createExtraByteError(this.totalPos);\n        this.appendBuffer(o), r && (n = this.readArraySize(), r = false, this.complete());\n        try {\n          for (; yield this.doDecodeSync(), --n !== 0; )\n            ;\n        } catch (i) {\n          if (!(i instanceof Q.DataViewIndexOutOfBoundsError))\n            throw i;\n        }\n        this.totalPos += this.pos;\n      }\n    }\n    doDecodeSync() {\n      e:\n        for (; ; ) {\n          let e = this.readHeadByte(), t;\n          if (e >= 224)\n            t = e - 256;\n          else if (e < 192)\n            if (e < 128)\n              t = e;\n            else if (e < 144) {\n              let n = e - 128;\n              if (n !== 0) {\n                this.pushMapState(n), this.complete();\n                continue e;\n              } else\n                t = {};\n            } else if (e < 160) {\n              let n = e - 144;\n              if (n !== 0) {\n                this.pushArrayState(n), this.complete();\n                continue e;\n              } else\n                t = [];\n            } else {\n              let n = e - 160;\n              t = this.decodeUtf8String(n, 0);\n            }\n          else if (e === 192)\n            t = null;\n          else if (e === 194)\n            t = false;\n          else if (e === 195)\n            t = true;\n          else if (e === 202)\n            t = this.readF32();\n          else if (e === 203)\n            t = this.readF64();\n          else if (e === 204)\n            t = this.readU8();\n          else if (e === 205)\n            t = this.readU16();\n          else if (e === 206)\n            t = this.readU32();\n          else if (e === 207)\n            t = this.readU64();\n          else if (e === 208)\n            t = this.readI8();\n          else if (e === 209)\n            t = this.readI16();\n          else if (e === 210)\n            t = this.readI32();\n          else if (e === 211)\n            t = this.readI64();\n          else if (e === 217) {\n            let n = this.lookU8();\n            t = this.decodeUtf8String(n, 1);\n          } else if (e === 218) {\n            let n = this.lookU16();\n            t = this.decodeUtf8String(n, 2);\n          } else if (e === 219) {\n            let n = this.lookU32();\n            t = this.decodeUtf8String(n, 4);\n          } else if (e === 220) {\n            let n = this.readU16();\n            if (n !== 0) {\n              this.pushArrayState(n), this.complete();\n              continue e;\n            } else\n              t = [];\n          } else if (e === 221) {\n            let n = this.readU32();\n            if (n !== 0) {\n              this.pushArrayState(n), this.complete();\n              continue e;\n            } else\n              t = [];\n          } else if (e === 222) {\n            let n = this.readU16();\n            if (n !== 0) {\n              this.pushMapState(n), this.complete();\n              continue e;\n            } else\n              t = {};\n          } else if (e === 223) {\n            let n = this.readU32();\n            if (n !== 0) {\n              this.pushMapState(n), this.complete();\n              continue e;\n            } else\n              t = {};\n          } else if (e === 196) {\n            let n = this.lookU8();\n            t = this.decodeBinary(n, 1);\n          } else if (e === 197) {\n            let n = this.lookU16();\n            t = this.decodeBinary(n, 2);\n          } else if (e === 198) {\n            let n = this.lookU32();\n            t = this.decodeBinary(n, 4);\n          } else if (e === 212)\n            t = this.decodeExtension(1, 0);\n          else if (e === 213)\n            t = this.decodeExtension(2, 0);\n          else if (e === 214)\n            t = this.decodeExtension(4, 0);\n          else if (e === 215)\n            t = this.decodeExtension(8, 0);\n          else if (e === 216)\n            t = this.decodeExtension(16, 0);\n          else if (e === 199) {\n            let n = this.lookU8();\n            t = this.decodeExtension(n, 1);\n          } else if (e === 200) {\n            let n = this.lookU16();\n            t = this.decodeExtension(n, 2);\n          } else if (e === 201) {\n            let n = this.lookU32();\n            t = this.decodeExtension(n, 4);\n          } else\n            throw new K.DecodeError(`Unrecognized type byte: ${(0, Cr.prettyByte)(e)}`);\n          this.complete();\n          let r = this.stack;\n          for (; r.length > 0; ) {\n            let n = r[r.length - 1];\n            if (n.type === 0)\n              if (n.array[n.position] = t, n.position++, n.position === n.size)\n                r.pop(), t = n.array;\n              else\n                continue e;\n            else if (n.type === 1) {\n              if (!Vn(t))\n                throw new K.DecodeError(\"The type of key must be string or number but \" + typeof t);\n              if (t === \"__proto__\")\n                throw new K.DecodeError(\"The key __proto__ is not allowed\");\n              n.key = t, n.type = 2;\n              continue e;\n            } else if (n.map[n.key] = t, n.readCount++, n.readCount === n.size)\n              r.pop(), t = n.map;\n            else {\n              n.key = null, n.type = 1;\n              continue e;\n            }\n          }\n          return t;\n        }\n    }\n    readHeadByte() {\n      return this.headByte === $e && (this.headByte = this.readU8()), this.headByte;\n    }\n    complete() {\n      this.headByte = $e;\n    }\n    readArraySize() {\n      let e = this.readHeadByte();\n      switch (e) {\n        case 220:\n          return this.readU16();\n        case 221:\n          return this.readU32();\n        default: {\n          if (e < 160)\n            return e - 144;\n          throw new K.DecodeError(`Unrecognized array type byte: ${(0, Cr.prettyByte)(e)}`);\n        }\n      }\n    }\n    pushMapState(e) {\n      if (e > this.maxMapLength)\n        throw new K.DecodeError(`Max length exceeded: map length (${e}) > maxMapLengthLength (${this.maxMapLength})`);\n      this.stack.push({ type: 1, size: e, key: null, readCount: 0, map: {} });\n    }\n    pushArrayState(e) {\n      if (e > this.maxArrayLength)\n        throw new K.DecodeError(`Max length exceeded: array length (${e}) > maxArrayLength (${this.maxArrayLength})`);\n      this.stack.push({ type: 0, size: e, array: new Array(e), position: 0 });\n    }\n    decodeUtf8String(e, t) {\n      var r;\n      if (e > this.maxStrLength)\n        throw new K.DecodeError(`Max length exceeded: UTF-8 byte length (${e}) > maxStrLength (${this.maxStrLength})`);\n      if (this.bytes.byteLength < this.pos + t + e)\n        throw Es;\n      let n = this.pos + t, o;\n      return this.stateIsMapKey() && (!((r = this.keyDecoder) === null || r === void 0) && r.canBeCached(e)) ? o = this.keyDecoder.decode(this.bytes, n, e) : e > jr.TEXT_DECODER_THRESHOLD ? o = (0, jr.utf8DecodeTD)(this.bytes, n, e) : o = (0, jr.utf8DecodeJs)(this.bytes, n, e), this.pos += t + e, o;\n    }\n    stateIsMapKey() {\n      return this.stack.length > 0 ? this.stack[this.stack.length - 1].type === 1 : false;\n    }\n    decodeBinary(e, t) {\n      if (e > this.maxBinLength)\n        throw new K.DecodeError(`Max length exceeded: bin length (${e}) > maxBinLength (${this.maxBinLength})`);\n      if (!this.hasRemaining(e + t))\n        throw Es;\n      let r = this.pos + t, n = this.bytes.subarray(r, r + e);\n      return this.pos += t + e, n;\n    }\n    decodeExtension(e, t) {\n      if (e > this.maxExtLength)\n        throw new K.DecodeError(`Max length exceeded: ext length (${e}) > maxExtLength (${this.maxExtLength})`);\n      let r = this.view.getInt8(this.pos + t), n = this.decodeBinary(e, t + 1);\n      return this.extensionCodec.decode(n, r, this.context);\n    }\n    lookU8() {\n      return this.view.getUint8(this.pos);\n    }\n    lookU16() {\n      return this.view.getUint16(this.pos);\n    }\n    lookU32() {\n      return this.view.getUint32(this.pos);\n    }\n    readU8() {\n      let e = this.view.getUint8(this.pos);\n      return this.pos++, e;\n    }\n    readI8() {\n      let e = this.view.getInt8(this.pos);\n      return this.pos++, e;\n    }\n    readU16() {\n      let e = this.view.getUint16(this.pos);\n      return this.pos += 2, e;\n    }\n    readI16() {\n      let e = this.view.getInt16(this.pos);\n      return this.pos += 2, e;\n    }\n    readU32() {\n      let e = this.view.getUint32(this.pos);\n      return this.pos += 4, e;\n    }\n    readI32() {\n      let e = this.view.getInt32(this.pos);\n      return this.pos += 4, e;\n    }\n    readU64() {\n      let e = (0, ce.getUint64)(this.view, this.pos);\n      return this.pos += 8, e;\n    }\n    readI64() {\n      let e = (0, ce.getInt64)(this.view, this.pos);\n      return this.pos += 8, e;\n    }\n    readF32() {\n      let e = this.view.getFloat32(this.pos);\n      return this.pos += 4, e;\n    }\n    readF64() {\n      let e = this.view.getFloat64(this.pos);\n      return this.pos += 8, e;\n    }\n  };\n  Q.Decoder = Br;\n});\nvar Fr = S((H) => {\n  \"use strict\";\n  Object.defineProperty(H, \"__esModule\", { value: true });\n  H.decodeMulti = H.decode = H.defaultDecodeOptions = void 0;\n  var Ps = Vt();\n  H.defaultDecodeOptions = {};\n  function zn(s, e = H.defaultDecodeOptions) {\n    return new Ps.Decoder(e.extensionCodec, e.context, e.maxStrLength, e.maxBinLength, e.maxArrayLength, e.maxMapLength, e.maxExtLength).decode(s);\n  }\n  H.decode = zn;\n  function Xn(s, e = H.defaultDecodeOptions) {\n    return new Ps.Decoder(e.extensionCodec, e.context, e.maxStrLength, e.maxBinLength, e.maxArrayLength, e.maxMapLength, e.maxExtLength).decodeMulti(s);\n  }\n  H.decodeMulti = Xn;\n});\nvar Ss = S((re) => {\n  \"use strict\";\n  Object.defineProperty(re, \"__esModule\", { value: true });\n  re.ensureAsyncIterable = re.asyncIterableFromStream = re.isAsyncIterable = void 0;\n  function Ts(s) {\n    return s[Symbol.asyncIterator] != null;\n  }\n  re.isAsyncIterable = Ts;\n  function Gn(s) {\n    if (s == null)\n      throw new Error(\"Assertion Failure: value must not be null nor undefined\");\n  }\n  async function* _s(s) {\n    let e = s.getReader();\n    try {\n      for (; ; ) {\n        let { done: t, value: r } = await e.read();\n        if (t)\n          return;\n        Gn(r), yield r;\n      }\n    } finally {\n      e.releaseLock();\n    }\n  }\n  re.asyncIterableFromStream = _s;\n  function $n(s) {\n    return Ts(s) ? s : _s(s);\n  }\n  re.ensureAsyncIterable = $n;\n});\nvar Ms = S((z) => {\n  \"use strict\";\n  Object.defineProperty(z, \"__esModule\", { value: true });\n  z.decodeStream = z.decodeMultiStream = z.decodeArrayStream = z.decodeAsync = void 0;\n  var qr = Vt(), Vr = Ss(), Jt = Fr();\n  async function Kn(s, e = Jt.defaultDecodeOptions) {\n    let t = (0, Vr.ensureAsyncIterable)(s);\n    return new qr.Decoder(e.extensionCodec, e.context, e.maxStrLength, e.maxBinLength, e.maxArrayLength, e.maxMapLength, e.maxExtLength).decodeAsync(t);\n  }\n  z.decodeAsync = Kn;\n  function Qn(s, e = Jt.defaultDecodeOptions) {\n    let t = (0, Vr.ensureAsyncIterable)(s);\n    return new qr.Decoder(e.extensionCodec, e.context, e.maxStrLength, e.maxBinLength, e.maxArrayLength, e.maxMapLength, e.maxExtLength).decodeArrayStream(t);\n  }\n  z.decodeArrayStream = Qn;\n  function ks(s, e = Jt.defaultDecodeOptions) {\n    let t = (0, Vr.ensureAsyncIterable)(s);\n    return new qr.Decoder(e.extensionCodec, e.context, e.maxStrLength, e.maxBinLength, e.maxArrayLength, e.maxMapLength, e.maxExtLength).decodeStream(t);\n  }\n  z.decodeMultiStream = ks;\n  function Zn(s, e = Jt.defaultDecodeOptions) {\n    return ks(s, e);\n  }\n  z.decodeStream = Zn;\n});\nvar zt = S((h) => {\n  \"use strict\";\n  Object.defineProperty(h, \"__esModule\", { value: true });\n  h.decodeTimestampExtension = h.encodeTimestampExtension = h.decodeTimestampToTimeSpec = h.encodeTimeSpecToTimestamp = h.encodeDateToTimeSpec = h.EXT_TIMESTAMP = h.ExtData = h.ExtensionCodec = h.Encoder = h.DataViewIndexOutOfBoundsError = h.DecodeError = h.Decoder = h.decodeStream = h.decodeMultiStream = h.decodeArrayStream = h.decodeAsync = h.decodeMulti = h.decode = h.encode = void 0;\n  var Yn = ws();\n  Object.defineProperty(h, \"encode\", { enumerable: true, get: function() {\n    return Yn.encode;\n  } });\n  var Ds = Fr();\n  Object.defineProperty(h, \"decode\", { enumerable: true, get: function() {\n    return Ds.decode;\n  } });\n  Object.defineProperty(h, \"decodeMulti\", { enumerable: true, get: function() {\n    return Ds.decodeMulti;\n  } });\n  var Ht = Ms();\n  Object.defineProperty(h, \"decodeAsync\", { enumerable: true, get: function() {\n    return Ht.decodeAsync;\n  } });\n  Object.defineProperty(h, \"decodeArrayStream\", { enumerable: true, get: function() {\n    return Ht.decodeArrayStream;\n  } });\n  Object.defineProperty(h, \"decodeMultiStream\", { enumerable: true, get: function() {\n    return Ht.decodeMultiStream;\n  } });\n  Object.defineProperty(h, \"decodeStream\", { enumerable: true, get: function() {\n    return Ht.decodeStream;\n  } });\n  var Ws = Vt();\n  Object.defineProperty(h, \"Decoder\", { enumerable: true, get: function() {\n    return Ws.Decoder;\n  } });\n  Object.defineProperty(h, \"DataViewIndexOutOfBoundsError\", { enumerable: true, get: function() {\n    return Ws.DataViewIndexOutOfBoundsError;\n  } });\n  var eo = Ct();\n  Object.defineProperty(h, \"DecodeError\", { enumerable: true, get: function() {\n    return eo.DecodeError;\n  } });\n  var to = Ir();\n  Object.defineProperty(h, \"Encoder\", { enumerable: true, get: function() {\n    return to.Encoder;\n  } });\n  var ro = Bt();\n  Object.defineProperty(h, \"ExtensionCodec\", { enumerable: true, get: function() {\n    return ro.ExtensionCodec;\n  } });\n  var so = Dr();\n  Object.defineProperty(h, \"ExtData\", { enumerable: true, get: function() {\n    return so.ExtData;\n  } });\n  var ve = Wr();\n  Object.defineProperty(h, \"EXT_TIMESTAMP\", { enumerable: true, get: function() {\n    return ve.EXT_TIMESTAMP;\n  } });\n  Object.defineProperty(h, \"encodeDateToTimeSpec\", { enumerable: true, get: function() {\n    return ve.encodeDateToTimeSpec;\n  } });\n  Object.defineProperty(h, \"encodeTimeSpecToTimestamp\", { enumerable: true, get: function() {\n    return ve.encodeTimeSpecToTimestamp;\n  } });\n  Object.defineProperty(h, \"decodeTimestampToTimeSpec\", { enumerable: true, get: function() {\n    return ve.decodeTimestampToTimeSpec;\n  } });\n  Object.defineProperty(h, \"encodeTimestampExtension\", { enumerable: true, get: function() {\n    return ve.encodeTimestampExtension;\n  } });\n  Object.defineProperty(h, \"decodeTimestampExtension\", { enumerable: true, get: function() {\n    return ve.decodeTimestampExtension;\n  } });\n});\nvar I = class extends Error {\n  constructor(e) {\n    super(e), this.name = this.constructor.name, Object.setPrototypeOf(this, new.target.prototype);\n  }\n};\nvar A = class extends I {\n};\nvar P = class extends I {\n};\nvar m = typeof process < \"u\" && process.release && process.release.name === \"node\";\nvar Rr;\nif (globalThis.document)\n  Rr = (s) => new Promise((e, t) => {\n    let r = document.createElement(\"script\");\n    r.src = s, r.onload = () => e(), r.onerror = t, document.head.appendChild(r);\n  });\nelse if (globalThis.importScripts)\n  Rr = async (s) => {\n    try {\n      globalThis.importScripts(s);\n    } catch (e) {\n      if (e instanceof TypeError)\n        await Promise.resolve().then(() => oe(B(s)));\n      else\n        throw e;\n    }\n  };\nelse if (m)\n  Rr = async (s) => {\n    let e = (await Promise.resolve().then(() => oe(B(\"path\")))).default;\n    await Promise.resolve().then(() => oe(B(e.resolve(s))));\n  };\nelse\n  throw new I(\"Cannot determine runtime environment\");\nvar c = {};\nfunction es(s) {\n  Object.keys(s).forEach((e) => c._free(s[e]));\n}\nvar N = { null: 0, symbol: 1, pairlist: 2, closure: 3, environment: 4, promise: 5, call: 6, special: 7, builtin: 8, string: 9, logical: 10, integer: 13, double: 14, complex: 15, character: 16, dots: 17, any: 18, list: 19, expression: 20, bytecode: 21, pointer: 22, weakref: 23, raw: 24, s4: 25, new: 30, free: 31, function: 99 };\nfunction mr(s) {\n  return !!s && typeof s == \"object\" && Object.keys(N).includes(s.type);\n}\nfunction Ce(s) {\n  return !!s && typeof s == \"object\" && \"re\" in s && \"im\" in s;\n}\nfunction je(s) {\n  return c._Rf_protect(L(s)), s;\n}\nfunction w(s, e) {\n  return c._Rf_protect(L(s)), ++e.n, s;\n}\nfunction ts(s) {\n  let e = c._malloc(4);\n  return c._R_ProtectWithIndex(L(s), e), { loc: c.getValue(e, \"i32\"), ptr: e };\n}\nfunction rs(s) {\n  c._Rf_unprotect(1), c._free(s.ptr);\n}\nfunction ss(s, e) {\n  return c._R_Reprotect(L(s), e.loc), s;\n}\nfunction T(s) {\n  c._Rf_unprotect(s);\n}\nfunction gr(s, e, t) {\n  c._Rf_defineVar(L(e), L(t), L(s));\n}\nfunction br(s, e) {\n  let t = {}, r = { n: 0 };\n  try {\n    let n = new Be(e);\n    w(n, r), t.code = c.allocateUTF8(s);\n    let o = c._R_ParseEvalString(t.code, n.ptr);\n    return y.wrap(o);\n  } finally {\n    es(t), T(r.n);\n  }\n}\nfunction Ne(s, e) {\n  return c.getWasmTableEntry(c.GOT.ffi_safe_eval.value)(L(s), L(e));\n}\nvar un = /* @__PURE__ */ new WeakMap();\nfunction ns(s, e) {\n  return un.set(s, e), s;\n}\nfunction L(s) {\n  return Tt(s) ? s.ptr : s;\n}\nfunction le(s, e) {\n  if (c._TYPEOF(s.ptr) !== N[e])\n    throw new Error(`Unexpected object type \"${s.type()}\" when expecting type \"${e}\"`);\n}\nfunction as(s) {\n  if (mr(s))\n    return new (is(s.type))(s);\n  if (s && typeof s == \"object\" && \"type\" in s && s.type === \"null\")\n    return new Pt();\n  if (s === null)\n    return new Y({ type: \"logical\", names: null, values: [null] });\n  if (typeof s == \"boolean\")\n    return new Y(s);\n  if (typeof s == \"number\")\n    return new fe(s);\n  if (typeof s == \"string\")\n    return new F(s);\n  if (Ce(s))\n    return new Fe(s);\n  if (ArrayBuffer.isView(s) || s instanceof ArrayBuffer)\n    return new qe(s);\n  if (Array.isArray(s))\n    return dn(s);\n  if (typeof s == \"object\")\n    return ee.fromObject(s);\n  throw new Error(\"Robj construction for this JS object is not yet supported\");\n}\nfunction dn(s) {\n  let e = { n: 0 };\n  if (s.every((r) => r && typeof r == \"object\" && !Tt(r) && !Ce(r))) {\n    let r = s, n = r.every((i) => Object.keys(i).filter((l) => !Object.keys(r[0]).includes(l)).length === 0 && Object.keys(r[0]).filter((l) => !Object.keys(i).includes(l)).length === 0), o = r.every((i) => Object.values(i).every((l) => cs(l) || ls(l)));\n    if (n && o)\n      return ee.fromD3(r);\n  }\n  if (s.every((r) => typeof r == \"boolean\" || r === null))\n    return new Y(s);\n  if (s.every((r) => typeof r == \"number\" || r === null))\n    return new fe(s);\n  if (s.every((r) => typeof r == \"string\" || r === null))\n    return new F(s);\n  try {\n    let r = new q([new U(\"c\"), ...s]);\n    return w(r, e), r.eval();\n  } finally {\n    T(e.n);\n  }\n}\nvar x = class {\n  constructor(e) {\n    this.ptr = e;\n  }\n  type() {\n    let e = c._TYPEOF(this.ptr);\n    return Object.keys(N).find((r) => N[r] === e);\n  }\n};\nvar Re;\nvar vt;\nvar ae = class extends x {\n  constructor(t) {\n    if (!(t instanceof x))\n      return as(t);\n    super(t.ptr);\n    u(this, Re);\n  }\n  static wrap(t) {\n    let r = c._TYPEOF(t), n = Object.keys(N)[Object.values(N).indexOf(r)];\n    return new (is(n))(new x(t));\n  }\n  get [Symbol.toStringTag]() {\n    return `RObject:${this.type()}`;\n  }\n  static getPersistentObject(t) {\n    return k[t];\n  }\n  getPropertyValue(t) {\n    return this[t];\n  }\n  inspect() {\n    br(\".Internal(inspect(x))\", { x: this });\n  }\n  isNull() {\n    return c._TYPEOF(this.ptr) === N.null;\n  }\n  isNa() {\n    try {\n      let t = br(\"is.na(x)\", { x: this });\n      return je(t), t.toBoolean();\n    } finally {\n      T(1);\n    }\n  }\n  isUnbound() {\n    return this.ptr === k.unboundValue.ptr;\n  }\n  attrs() {\n    return ie.wrap(c._ATTRIB(this.ptr));\n  }\n  class() {\n    let t = { n: 0 }, r = new q([new U(\"class\"), this]);\n    w(r, t);\n    try {\n      return r.eval();\n    } finally {\n      T(t.n);\n    }\n  }\n  setNames(t) {\n    let r;\n    if (t === null)\n      r = k.null;\n    else if (Array.isArray(t) && t.every((n) => typeof n == \"string\" || n === null))\n      r = new F(t);\n    else\n      throw new Error(\"Argument to setNames must be null or an Array of strings or null\");\n    return c._Rf_setAttrib(this.ptr, k.namesSymbol.ptr, r.ptr), this;\n  }\n  names() {\n    let t = F.wrap(c._Rf_getAttrib(this.ptr, k.namesSymbol.ptr));\n    return t.isNull() ? null : t.toArray();\n  }\n  includes(t) {\n    let r = this.names();\n    return r && r.includes(t);\n  }\n  toJs(t = { depth: 0 }, r = 1) {\n    throw new Error(\"This R object cannot be converted to JS\");\n  }\n  subset(t) {\n    return E(this, Re, vt).call(this, t, k.bracketSymbol.ptr);\n  }\n  get(t) {\n    return E(this, Re, vt).call(this, t, k.bracket2Symbol.ptr);\n  }\n  getDollar(t) {\n    return E(this, Re, vt).call(this, t, k.dollarSymbol.ptr);\n  }\n  pluck(...t) {\n    let r = ts(k.null);\n    try {\n      let n = (i, l) => {\n        let p = i.get(l);\n        return ss(p, r);\n      }, o = t.reduce(n, this);\n      return o.isNull() ? void 0 : o;\n    } finally {\n      rs(r);\n    }\n  }\n  set(t, r) {\n    let n = { n: 0 };\n    try {\n      let o = new ae(t);\n      w(o, n);\n      let i = new ae(r);\n      w(i, n);\n      let l = new U(\"[[<-\"), p = c._Rf_lang4(l.ptr, this.ptr, o.ptr, i.ptr);\n      return w(p, n), ae.wrap(Ne(p, k.baseEnv));\n    } finally {\n      T(n.n);\n    }\n  }\n  static getMethods(t) {\n    let r = /* @__PURE__ */ new Set(), n = t;\n    do\n      Object.getOwnPropertyNames(n).map((o) => r.add(o));\n    while (n = Object.getPrototypeOf(n));\n    return [...r.keys()].filter((o) => typeof t[o] == \"function\");\n  }\n};\nvar y = ae;\nRe = /* @__PURE__ */ new WeakSet(), vt = function(t, r) {\n  let n = { n: 0 };\n  try {\n    let o = new ae(t);\n    w(o, n);\n    let i = c._Rf_lang3(r, this.ptr, o.ptr);\n    return w(i, n), ae.wrap(Ne(i, k.baseEnv));\n  } finally {\n    T(n.n);\n  }\n};\nvar Pt = class extends y {\n  constructor() {\n    return super(new x(c.getValue(c._R_NilValue, \"*\"))), this;\n  }\n  toJs() {\n    return { type: \"null\" };\n  }\n};\nvar U = class extends y {\n  constructor(e) {\n    if (e instanceof x) {\n      le(e, \"symbol\"), super(e);\n      return;\n    }\n    let t = c.allocateUTF8(e);\n    try {\n      super(new x(c._Rf_install(t)));\n    } finally {\n      c._free(t);\n    }\n  }\n  toJs() {\n    let e = this.toObject();\n    return { type: \"symbol\", printname: e.printname, symvalue: e.symvalue, internal: e.internal };\n  }\n  toObject() {\n    return { printname: this.printname().isUnbound() ? null : this.printname().toString(), symvalue: this.symvalue().isUnbound() ? null : this.symvalue().ptr, internal: this.internal().isNull() ? null : this.internal().ptr };\n  }\n  toString() {\n    return this.printname().toString();\n  }\n  printname() {\n    return Je.wrap(c._PRINTNAME(this.ptr));\n  }\n  symvalue() {\n    return y.wrap(c._SYMVALUE(this.ptr));\n  }\n  internal() {\n    return y.wrap(c._INTERNAL(this.ptr));\n  }\n};\nvar ie = class extends y {\n  constructor(e) {\n    if (e instanceof x)\n      return le(e, \"pairlist\"), super(e), this;\n    let t = { n: 0 };\n    try {\n      let { names: r, values: n } = me(e), o = ie.wrap(c._Rf_allocList(n.length));\n      w(o, t);\n      for (let [i, l] = [0, o]; !l.isNull(); [i, l] = [i + 1, l.cdr()])\n        l.setcar(new y(n[i]));\n      o.setNames(r), super(o);\n    } finally {\n      T(t.n);\n    }\n  }\n  get length() {\n    return this.toArray().length;\n  }\n  toArray(e = { depth: 1 }) {\n    return this.toJs(e).values;\n  }\n  toObject({ allowDuplicateKey: e = true, allowEmptyKey: t = false, depth: r = -1 } = {}) {\n    let n = this.entries({ depth: r }), o = n.map(([i]) => i);\n    if (!e && new Set(o).size !== o.length)\n      throw new Error(\"Duplicate key when converting pairlist without allowDuplicateKey enabled\");\n    if (!t && o.some((i) => !i))\n      throw new Error(\"Empty or null key when converting pairlist without allowEmptyKey enabled\");\n    return Object.fromEntries(n.filter((i, l) => n.findIndex((p) => p[0] === i[0]) === l));\n  }\n  entries(e = { depth: 1 }) {\n    let t = this.toJs(e);\n    return t.values.map((r, n) => [t.names ? t.names[n] : null, r]);\n  }\n  toJs(e = { depth: 0 }, t = 1) {\n    let r = [], n = false, o = [];\n    for (let l = this; !l.isNull(); l = l.cdr()) {\n      let p = l.tag();\n      p.isNull() ? r.push(\"\") : (n = true, r.push(p.toString())), e.depth && t >= e.depth ? o.push(l.car()) : o.push(l.car().toJs(e, t + 1));\n    }\n    return { type: \"pairlist\", names: n ? r : null, values: o };\n  }\n  includes(e) {\n    return e in this.toObject();\n  }\n  setcar(e) {\n    c._SETCAR(this.ptr, e.ptr);\n  }\n  car() {\n    return y.wrap(c._CAR(this.ptr));\n  }\n  cdr() {\n    return y.wrap(c._CDR(this.ptr));\n  }\n  tag() {\n    return y.wrap(c._TAG(this.ptr));\n  }\n};\nvar q = class extends y {\n  constructor(e) {\n    if (e instanceof x)\n      return le(e, \"call\"), super(e), this;\n    let t = { n: 0 };\n    try {\n      let { values: r } = me(e), n = r.map((i) => w(new y(i), t)), o = q.wrap(c._Rf_allocVector(N.call, r.length));\n      w(o, t);\n      for (let [i, l] = [0, o]; !l.isNull(); [i, l] = [i + 1, l.cdr()])\n        l.setcar(n[i]);\n      super(o);\n    } finally {\n      T(t.n);\n    }\n  }\n  setcar(e) {\n    c._SETCAR(this.ptr, e.ptr);\n  }\n  car() {\n    return y.wrap(c._CAR(this.ptr));\n  }\n  cdr() {\n    return y.wrap(c._CDR(this.ptr));\n  }\n  eval() {\n    return c.webr.evalR(this, { env: k.baseEnv });\n  }\n  capture(e = {}) {\n    return c.webr.captureR(this, e);\n  }\n  deparse() {\n    let e = { n: 0 };\n    try {\n      let t = c._Rf_lang2(new U(\"deparse1\").ptr, c._Rf_lang2(new U(\"quote\").ptr, this.ptr));\n      w(t, e);\n      let r = F.wrap(Ne(t, k.baseEnv));\n      return w(r, e), r.toString();\n    } finally {\n      T(e.n);\n    }\n  }\n};\nvar Ve = class extends y {\n  constructor(e, t = null) {\n    if (e instanceof x) {\n      if (le(e, \"list\"), super(e), t) {\n        if (t.length !== this.length)\n          throw new Error(\"Can't construct named `RList`. Supplied `names` must be the same length as the list.\");\n        this.setNames(t);\n      }\n      return this;\n    }\n    let r = { n: 0 };\n    try {\n      let n = me(e), o = c._Rf_allocVector(N.list, n.values.length);\n      w(o, r), n.values.forEach((l, p) => {\n        c._SET_VECTOR_ELT(o, p, new y(l).ptr);\n      });\n      let i = t || n.names;\n      if (i && i.length !== n.values.length)\n        throw new Error(\"Can't construct named `RList`. Supplied `names` must be the same length as the list.\");\n      y.wrap(o).setNames(i), super(new x(o));\n    } finally {\n      T(r.n);\n    }\n  }\n  get length() {\n    return c._LENGTH(this.ptr);\n  }\n  isDataFrame() {\n    let e = ie.wrap(c._ATTRIB(this.ptr)).get(\"class\");\n    return !e.isNull() && e.toArray().includes(\"data.frame\");\n  }\n  toArray(e = { depth: 1 }) {\n    return this.toJs(e).values;\n  }\n  toObject({ allowDuplicateKey: e = true, allowEmptyKey: t = false, depth: r = -1 } = {}) {\n    let n = this.entries({ depth: r }), o = n.map(([i]) => i);\n    if (!e && new Set(o).size !== o.length)\n      throw new Error(\"Duplicate key when converting list without allowDuplicateKey enabled\");\n    if (!t && o.some((i) => !i))\n      throw new Error(\"Empty or null key when converting list without allowEmptyKey enabled\");\n    return Object.fromEntries(n.filter((i, l) => n.findIndex((p) => p[0] === i[0]) === l));\n  }\n  toD3() {\n    if (!this.isDataFrame())\n      throw new Error(\"Can't convert R list object to D3 format. Object must be of class 'data.frame'.\");\n    return this.entries().reduce((t, r) => (r[1].forEach((n, o) => t[o] = Object.assign(t[o] || {}, { [r[0]]: n })), t), []);\n  }\n  entries(e = { depth: -1 }) {\n    let t = this.toJs(e);\n    return this.isDataFrame() && e.depth < 0 && (t.values = t.values.map((r) => r.toArray())), t.values.map((r, n) => [t.names ? t.names[n] : null, r]);\n  }\n  toJs(e = { depth: 0 }, t = 1) {\n    return { type: \"list\", names: this.names(), values: [...Array(this.length).keys()].map((r) => e.depth && t >= e.depth ? this.get(r + 1) : this.get(r + 1).toJs(e, t + 1)) };\n  }\n};\nvar ee = class extends Ve {\n  constructor(e) {\n    if (e instanceof x) {\n      if (super(e), !this.isDataFrame())\n        throw new Error(\"Can't construct `RDataFrame`. Supplied R object is not a `data.frame`.\");\n      return this;\n    }\n    return ee.fromObject(e);\n  }\n  static fromObject(e) {\n    let { names: t, values: r } = me(e), n = { n: 0 };\n    try {\n      let o = !!t && t.length > 0 && t.every((l) => l), i = r.length > 0 && r.every((l) => Array.isArray(l) || ArrayBuffer.isView(l) || l instanceof ArrayBuffer);\n      if (o && i) {\n        let l = r, p = l.every((b) => b.length === l[0].length), D = l.every((b) => cs(b[0]) || ls(b[0]));\n        if (p && D) {\n          let b = new Ve({ type: \"list\", names: t, values: l.map((rn) => as(rn)) });\n          w(b, n);\n          let j = new q([new U(\"as.data.frame\"), b]);\n          return w(j, n), new ee(j.eval());\n        }\n      }\n    } finally {\n      T(n.n);\n    }\n    throw new Error(\"Can't construct `data.frame`. Source object is not eligible.\");\n  }\n  static fromD3(e) {\n    return this.fromObject(Object.fromEntries(Object.keys(e[0]).map((t) => [t, e.map((r) => r[t])])));\n  }\n};\nvar ye = class extends y {\n  exec(...e) {\n    let t = { n: 0 };\n    try {\n      let r = new q([this, ...e]);\n      return w(r, t), r.eval();\n    } finally {\n      T(t.n);\n    }\n  }\n  capture(e = {}, ...t) {\n    let r = { n: 0 };\n    try {\n      let n = new q([this, ...t]);\n      return w(n, r), n.capture(e);\n    } finally {\n      T(r.n);\n    }\n  }\n};\nvar Je = class extends y {\n  constructor(e) {\n    if (e instanceof x) {\n      le(e, \"string\"), super(e);\n      return;\n    }\n    let t = c.allocateUTF8(e);\n    try {\n      super(new x(c._Rf_mkChar(t)));\n    } finally {\n      c._free(t);\n    }\n  }\n  toString() {\n    return c.UTF8ToString(c._R_CHAR(this.ptr));\n  }\n  toJs() {\n    return { type: \"string\", value: this.toString() };\n  }\n};\nvar Be = class extends y {\n  constructor(e = {}) {\n    if (e instanceof x)\n      return le(e, \"environment\"), super(e), this;\n    let t = 0;\n    try {\n      let { names: r, values: n } = me(e), o = je(c._R_NewEnv(k.globalEnv.ptr, 0, 0));\n      ++t, n.forEach((i, l) => {\n        let p = r ? r[l] : null;\n        if (!p)\n          throw new Error(\"Can't create object in new environment with empty symbol name\");\n        let D = new U(p), b = je(new y(i));\n        try {\n          gr(o, D, b);\n        } finally {\n          T(1);\n        }\n      }), super(new x(o));\n    } finally {\n      T(t);\n    }\n  }\n  ls(e = false, t = true) {\n    return F.wrap(c._R_lsInternal3(this.ptr, Number(e), Number(t))).toArray();\n  }\n  bind(e, t) {\n    let r = new U(e), n = je(new y(t));\n    try {\n      gr(this, r, n);\n    } finally {\n      T(1);\n    }\n  }\n  names() {\n    return this.ls(true, true);\n  }\n  frame() {\n    return y.wrap(c._FRAME(this.ptr));\n  }\n  subset(e) {\n    if (typeof e == \"number\")\n      throw new Error(\"Object of type environment is not subsettable\");\n    return this.getDollar(e);\n  }\n  toObject({ depth: e = -1 } = {}) {\n    let t = this.names();\n    return Object.fromEntries([...Array(t.length).keys()].map((r) => {\n      let n = this.getDollar(t[r]);\n      return [t[r], e < 0 ? n : n.toJs({ depth: e })];\n    }));\n  }\n  toJs(e = { depth: 0 }, t = 1) {\n    let r = this.names(), n = [...Array(r.length).keys()].map((o) => e.depth && t >= e.depth ? this.getDollar(r[o]) : this.getDollar(r[o]).toJs(e, t + 1));\n    return { type: \"environment\", names: r, values: n };\n  }\n};\nvar te = class extends y {\n  constructor(e, t, r) {\n    if (e instanceof x)\n      return le(e, t), super(e), this;\n    let n = { n: 0 };\n    try {\n      let { names: o, values: i } = me(e), l = c._Rf_allocVector(N[t], i.length);\n      w(l, n), i.forEach(r(l)), y.wrap(l).setNames(o), super(new x(l));\n    } finally {\n      T(n.n);\n    }\n  }\n  get length() {\n    return c._LENGTH(this.ptr);\n  }\n  get(e) {\n    return super.get(e);\n  }\n  subset(e) {\n    return super.subset(e);\n  }\n  getDollar() {\n    throw new Error(\"$ operator is invalid for atomic vectors\");\n  }\n  detectMissing() {\n    let e = { n: 0 };\n    try {\n      let t = c._Rf_lang2(new U(\"is.na\").ptr, this.ptr);\n      w(t, e);\n      let r = Y.wrap(Ne(t, k.baseEnv));\n      w(r, e);\n      let n = r.toTypedArray();\n      return Array.from(n).map((o) => !!o);\n    } finally {\n      T(e.n);\n    }\n  }\n  toArray() {\n    let e = this.toTypedArray();\n    return this.detectMissing().map((t, r) => t ? null : e[r]);\n  }\n  toObject({ allowDuplicateKey: e = true, allowEmptyKey: t = false } = {}) {\n    let r = this.entries(), n = r.map(([o]) => o);\n    if (!e && new Set(n).size !== n.length)\n      throw new Error(\"Duplicate key when converting atomic vector without allowDuplicateKey enabled\");\n    if (!t && n.some((o) => !o))\n      throw new Error(\"Empty or null key when converting atomic vector without allowEmptyKey enabled\");\n    return Object.fromEntries(r.filter((o, i) => r.findIndex((l) => l[0] === o[0]) === i));\n  }\n  entries() {\n    let e = this.toArray(), t = this.names();\n    return e.map((r, n) => [t ? t[n] : null, r]);\n  }\n  toJs() {\n    return { type: this.type(), names: this.names(), values: this.toArray() };\n  }\n};\nvar _t;\nvar wr = class extends te {\n  constructor(e) {\n    super(e, \"logical\", a(wr, _t));\n  }\n  getBoolean(e) {\n    return this.get(e).toArray()[0];\n  }\n  toBoolean() {\n    if (this.length !== 1)\n      throw new Error(\"Can't convert atomic vector of length > 1 to a scalar JS value\");\n    let e = this.getBoolean(1);\n    if (e === null)\n      throw new Error(\"Can't convert missing value `NA` to a JS boolean\");\n    return e;\n  }\n  toTypedArray() {\n    return new Int32Array(c.HEAP32.subarray(c._LOGICAL(this.ptr) / 4, c._LOGICAL(this.ptr) / 4 + this.length));\n  }\n  toArray() {\n    let e = this.toTypedArray();\n    return this.detectMissing().map((t, r) => t ? null : !!e[r]);\n  }\n};\nvar Y = wr;\n_t = /* @__PURE__ */ new WeakMap(), u(Y, _t, (e) => {\n  let t = c._LOGICAL(e), r = c.getValue(c._R_NaInt, \"i32\");\n  return (n, o) => {\n    c.setValue(t + 4 * o, n === null ? r : !!n, \"i32\");\n  };\n});\nvar St;\nvar xr = class extends te {\n  constructor(e) {\n    super(e, \"integer\", a(xr, St));\n  }\n  getNumber(e) {\n    return this.get(e).toArray()[0];\n  }\n  toNumber() {\n    if (this.length !== 1)\n      throw new Error(\"Can't convert atomic vector of length > 1 to a scalar JS value\");\n    let e = this.getNumber(1);\n    if (e === null)\n      throw new Error(\"Can't convert missing value `NA` to a JS number\");\n    return e;\n  }\n  toTypedArray() {\n    return new Int32Array(c.HEAP32.subarray(c._INTEGER(this.ptr) / 4, c._INTEGER(this.ptr) / 4 + this.length));\n  }\n};\nvar Et = xr;\nSt = /* @__PURE__ */ new WeakMap(), u(Et, St, (e) => {\n  let t = c._INTEGER(e), r = c.getValue(c._R_NaInt, \"i32\");\n  return (n, o) => {\n    c.setValue(t + 4 * o, n === null ? r : Math.round(Number(n)), \"i32\");\n  };\n});\nvar kt;\nvar vr = class extends te {\n  constructor(e) {\n    super(e, \"double\", a(vr, kt));\n  }\n  getNumber(e) {\n    return this.get(e).toArray()[0];\n  }\n  toNumber() {\n    if (this.length !== 1)\n      throw new Error(\"Can't convert atomic vector of length > 1 to a scalar JS value\");\n    let e = this.getNumber(1);\n    if (e === null)\n      throw new Error(\"Can't convert missing value `NA` to a JS number\");\n    return e;\n  }\n  toTypedArray() {\n    return new Float64Array(c.HEAPF64.subarray(c._REAL(this.ptr) / 8, c._REAL(this.ptr) / 8 + this.length));\n  }\n};\nvar fe = vr;\nkt = /* @__PURE__ */ new WeakMap(), u(fe, kt, (e) => {\n  let t = c._REAL(e), r = c.getValue(c._R_NaReal, \"double\");\n  return (n, o) => {\n    c.setValue(t + 8 * o, n === null ? r : n, \"double\");\n  };\n});\nvar Mt;\nvar Er = class extends te {\n  constructor(e) {\n    super(e, \"complex\", a(Er, Mt));\n  }\n  getComplex(e) {\n    return this.get(e).toArray()[0];\n  }\n  toComplex() {\n    if (this.length !== 1)\n      throw new Error(\"Can't convert atomic vector of length > 1 to a scalar JS value\");\n    let e = this.getComplex(1);\n    if (e === null)\n      throw new Error(\"Can't convert missing value `NA` to a JS object\");\n    return e;\n  }\n  toTypedArray() {\n    return new Float64Array(c.HEAPF64.subarray(c._COMPLEX(this.ptr) / 8, c._COMPLEX(this.ptr) / 8 + 2 * this.length));\n  }\n  toArray() {\n    let e = this.toTypedArray();\n    return this.detectMissing().map((t, r) => t ? null : { re: e[2 * r], im: e[2 * r + 1] });\n  }\n};\nvar Fe = Er;\nMt = /* @__PURE__ */ new WeakMap(), u(Fe, Mt, (e) => {\n  let t = c._COMPLEX(e), r = c.getValue(c._R_NaReal, \"double\");\n  return (n, o) => {\n    c.setValue(t + 8 * (2 * o), n === null ? r : n.re, \"double\"), c.setValue(t + 8 * (2 * o + 1), n === null ? r : n.im, \"double\");\n  };\n});\nvar Dt;\nvar Pr = class extends te {\n  constructor(e) {\n    super(e, \"character\", a(Pr, Dt));\n  }\n  getString(e) {\n    return this.get(e).toArray()[0];\n  }\n  toString() {\n    if (this.length !== 1)\n      throw new Error(\"Can't convert atomic vector of length > 1 to a scalar JS value\");\n    let e = this.getString(1);\n    if (e === null)\n      throw new Error(\"Can't convert missing value `NA` to a JS string\");\n    return e;\n  }\n  toTypedArray() {\n    return new Uint32Array(c.HEAPU32.subarray(c._STRING_PTR(this.ptr) / 4, c._STRING_PTR(this.ptr) / 4 + this.length));\n  }\n  toArray() {\n    return this.detectMissing().map((e, t) => e ? null : c.UTF8ToString(c._R_CHAR(c._STRING_ELT(this.ptr, t))));\n  }\n};\nvar F = Pr;\nDt = /* @__PURE__ */ new WeakMap(), u(F, Dt, (e) => (t, r) => {\n  t === null ? c._SET_STRING_ELT(e, r, k.naString.ptr) : c._SET_STRING_ELT(e, r, new Je(t).ptr);\n});\nvar Wt;\nvar Tr = class extends te {\n  constructor(e) {\n    e instanceof ArrayBuffer && (e = new Uint8Array(e)), super(e, \"raw\", a(Tr, Wt));\n  }\n  getNumber(e) {\n    return this.get(e).toArray()[0];\n  }\n  toNumber() {\n    if (this.length !== 1)\n      throw new Error(\"Can't convert atomic vector of length > 1 to a scalar JS value\");\n    let e = this.getNumber(1);\n    if (e === null)\n      throw new Error(\"Can't convert missing value `NA` to a JS number\");\n    return e;\n  }\n  toTypedArray() {\n    return new Uint8Array(c.HEAPU8.subarray(c._RAW(this.ptr), c._RAW(this.ptr) + this.length));\n  }\n};\nvar qe = Tr;\nWt = /* @__PURE__ */ new WeakMap(), u(qe, Wt, (e) => {\n  let t = c._RAW(e);\n  return (r, n) => {\n    c.setValue(t + n, Number(r), \"i8\");\n  };\n});\nfunction me(s) {\n  return mr(s) ? s : Array.isArray(s) || ArrayBuffer.isView(s) ? { names: null, values: s } : s && typeof s == \"object\" && !Ce(s) ? { names: Object.keys(s), values: Object.values(s) } : { names: null, values: [s] };\n}\nfunction is(s) {\n  let e = { object: y, null: Pt, symbol: U, pairlist: ie, closure: ye, environment: Be, call: q, special: ye, builtin: ye, string: Je, logical: Y, integer: Et, double: fe, complex: Fe, character: F, list: Ve, raw: qe, function: ye, dataframe: ee };\n  return s in e ? e[s] : y;\n}\nfunction Tt(s) {\n  return s instanceof y;\n}\nfunction ls(s) {\n  let e = [\"logical\", \"integer\", \"double\", \"complex\", \"character\"];\n  return Tt(s) && e.includes(s.type()) || Tt(s) && s.isNa();\n}\nfunction cs(s) {\n  return s === null || typeof s == \"number\" || typeof s == \"boolean\" || typeof s == \"string\" || Ce(s);\n}\nvar k;\nvar Os = oe(zt());\nvar no = new TextEncoder();\nvar X;\nvar G;\nvar Ke;\nvar Jr;\nX = /* @__PURE__ */ new WeakMap(), G = /* @__PURE__ */ new WeakMap(), Ke = /* @__PURE__ */ new WeakSet(), Jr = function() {\n  a(this, X).push(new Promise((e) => {\n    a(this, G).push(e);\n  }));\n};\nfunction Qe(s, e, t) {\n  return Us({ type: \"response\", data: { uuid: s, resp: e } }, t);\n}\nfunction Us(s, e) {\n  return e && ns(s, e), s;\n}\nvar Te;\nvar Ze;\nTe = /* @__PURE__ */ new WeakMap(), Ze = /* @__PURE__ */ new WeakMap();\nvar Bs = oe(zt());\nvar lo = new TextDecoder(\"utf-8\");\nvar _e;\nvar Se;\nvar Ye;\nvar et;\nvar ke;\n_e = /* @__PURE__ */ new WeakMap(), Se = /* @__PURE__ */ new WeakMap(), Ye = /* @__PURE__ */ new WeakMap(), et = /* @__PURE__ */ new WeakMap(), ke = /* @__PURE__ */ new WeakMap();\nvar zr = new Int32Array(new ArrayBuffer(4));\nm && (globalThis.Worker = B(\"worker_threads\").Worker);\nvar Me;\nvar Zt;\nvar Vs;\nvar rt;\nMe = /* @__PURE__ */ new WeakMap(), Zt = /* @__PURE__ */ new WeakSet(), Vs = function(t) {\n  m ? (t.on(\"message\", (r) => {\n    a(this, rt).call(this, t, r);\n  }), t.on(\"error\", (r) => {\n    console.error(r), this.reject(new A(\"An error occurred initialising the webR SharedBufferChannel worker.\"));\n  })) : (t.onmessage = (r) => a(this, rt).call(this, t, r.data), t.onerror = (r) => {\n    console.error(r), this.reject(new A(\"An error occurred initialising the webR SharedBufferChannel worker.\"));\n  });\n}, rt = /* @__PURE__ */ new WeakMap();\nvar ue;\nvar st;\nvar pe;\nvar nt;\nue = /* @__PURE__ */ new WeakMap(), st = /* @__PURE__ */ new WeakMap(), pe = /* @__PURE__ */ new WeakMap(), nt = /* @__PURE__ */ new WeakMap();\nvar sr = oe(zt());\nm && (globalThis.Worker = B(\"worker_threads\").Worker);\nvar De;\nvar de;\nvar We;\nvar er;\nvar Js;\nvar tr;\nvar Hs;\nvar rr;\nvar zs;\nvar ot;\nDe = /* @__PURE__ */ new WeakMap(), de = /* @__PURE__ */ new WeakMap(), We = /* @__PURE__ */ new WeakMap(), er = /* @__PURE__ */ new WeakSet(), Js = async function(t) {\n  d(this, de, await navigator.serviceWorker.register(t)), await navigator.serviceWorker.ready, window.addEventListener(\"beforeunload\", () => {\n    var n;\n    (n = a(this, de)) == null || n.unregister();\n  });\n  let r = await new Promise((n) => {\n    navigator.serviceWorker.addEventListener(\"message\", function o(i) {\n      i.data.type === \"registration-successful\" && (navigator.serviceWorker.removeEventListener(\"message\", o), n(i.data.clientId));\n    }), this.activeRegistration().postMessage({ type: \"register-client-main\" });\n  });\n  return navigator.serviceWorker.addEventListener(\"message\", (n) => {\n    E(this, tr, Hs).call(this, n);\n  }), r;\n}, tr = /* @__PURE__ */ new WeakSet(), Hs = async function(t) {\n  if (t.data.type === \"request\") {\n    let r = t.data.data, n = a(this, De).get(r);\n    if (!n)\n      throw new P(\"Request not found during service worker XHR request\");\n    switch (a(this, De).delete(r), n.type) {\n      case \"read\": {\n        let o = await this.inputQueue.get();\n        this.activeRegistration().postMessage({ type: \"wasm-webr-fetch-response\", uuid: r, response: Qe(r, o) });\n        break;\n      }\n      case \"interrupt\": {\n        let o = a(this, We);\n        this.activeRegistration().postMessage({ type: \"wasm-webr-fetch-response\", uuid: r, response: Qe(r, o) }), this.inputQueue.reset(), d(this, We, false);\n        break;\n      }\n      default:\n        throw new P(`Unsupported request type '${n.type}'.`);\n    }\n    return;\n  }\n}, rr = /* @__PURE__ */ new WeakSet(), zs = function(t) {\n  m ? (t.on(\"message\", (r) => {\n    a(this, ot).call(this, t, r);\n  }), t.on(\"error\", (r) => {\n    console.error(r), this.reject(new A(\"An error occurred initialising the webR ServiceWorkerChannel worker.\"));\n  })) : (t.onmessage = (r) => a(this, ot).call(this, t, r.data), t.onerror = (r) => {\n    console.error(r), this.reject(new A(\"An error occurred initialising the webR ServiceWorkerChannel worker.\"));\n  });\n}, ot = /* @__PURE__ */ new WeakMap();\nvar Ae;\nvar at;\nvar it;\nvar lt;\nvar ct;\nvar ut;\nAe = /* @__PURE__ */ new WeakMap(), at = /* @__PURE__ */ new WeakMap(), it = /* @__PURE__ */ new WeakMap(), lt = /* @__PURE__ */ new WeakMap(), ct = /* @__PURE__ */ new WeakMap(), ut = /* @__PURE__ */ new WeakMap();\nm && (globalThis.Worker = B(\"worker_threads\").Worker);\nvar Oe;\nvar nr;\nvar Xs;\nvar dt;\nOe = /* @__PURE__ */ new WeakMap(), nr = /* @__PURE__ */ new WeakSet(), Xs = function(t) {\n  m ? (t.on(\"message\", (r) => {\n    a(this, dt).call(this, t, r);\n  }), t.on(\"error\", (r) => {\n    console.error(r), this.reject(new A(\"An error occurred initialising the webR PostMessageChannel worker.\"));\n  })) : (t.onmessage = (r) => a(this, dt).call(this, t, r.data), t.onerror = (r) => {\n    console.error(r), this.reject(new A(\"An error occurred initialising the webR PostMessageChannel worker.\"));\n  });\n}, dt = /* @__PURE__ */ new WeakMap();\nvar Ie;\nvar Ue;\nvar ht;\nvar he;\nvar or;\nIe = /* @__PURE__ */ new WeakMap(), Ue = /* @__PURE__ */ new WeakMap(), ht = /* @__PURE__ */ new WeakMap(), he = /* @__PURE__ */ new WeakMap(), or = /* @__PURE__ */ new WeakMap();\nvar O = { Automatic: 0, SharedArrayBuffer: 1, ServiceWorker: 2, PostMessage: 3 };\nvar $s = m ? __dirname + \"/\" : \"https://webr.r-wasm.org/v0.4.2/\";\nvar Ks = \"https://repo.r-wasm.org\";\nvar Kr = \"0.4.2\";\nvar yt;\nvar ft;\nvar Rt;\nvar mt;\nvar gt;\nvar ar;\nvar ir;\nvar lr;\nvar cr;\nvar ur;\nvar pr;\nvar Ys;\nyt = /* @__PURE__ */ new WeakMap(), ft = /* @__PURE__ */ new WeakMap(), Rt = /* @__PURE__ */ new WeakMap(), mt = /* @__PURE__ */ new WeakMap(), gt = /* @__PURE__ */ new WeakMap(), ar = /* @__PURE__ */ new WeakMap(), ir = /* @__PURE__ */ new WeakMap(), lr = /* @__PURE__ */ new WeakMap(), cr = /* @__PURE__ */ new WeakMap(), ur = /* @__PURE__ */ new WeakMap(), pr = /* @__PURE__ */ new WeakSet(), Ys = async function() {\n  for (; ; ) {\n    let e = await this.webR.read();\n    switch (e.type) {\n      case \"stdout\":\n        a(this, yt).call(this, e.data);\n        break;\n      case \"stderr\":\n        a(this, ft).call(this, e.data);\n        break;\n      case \"prompt\":\n        a(this, Rt).call(this, e.data);\n        break;\n      case \"canvas\":\n        e.data.event === \"canvasImage\" ? a(this, mt).call(this, e.data.image) : e.data.event === \"canvasNewPage\" && a(this, gt).call(this);\n        break;\n      case \"closed\":\n        return;\n      default:\n        console.warn(`Unhandled output type for webR Console: ${e.type}.`);\n    }\n  }\n};\nvar yo = { FONTCONFIG_PATH: \"/etc/fonts\", R_HOME: \"/usr/lib/R\", R_ENABLE_JIT: \"0\", WEBR: \"1\", WEBR_VERSION: Kr };\nvar en = { RArgs: [], REnv: yo, baseUrl: $s, serviceWorkerUrl: \"\", repoUrl: Ks, homedir: \"/home/web_user\", interactive: true, channelType: O.Automatic, createLazyFilesystem: true };\nvar R;\nvar bt;\nvar yr;\nvar tn;\nR = /* @__PURE__ */ new WeakMap(), bt = /* @__PURE__ */ new WeakMap(), yr = /* @__PURE__ */ new WeakSet(), tn = async function() {\n  for (; ; ) {\n    let e = await a(this, R).readSystem();\n    switch (e.type) {\n      case \"setTimeoutWasm\":\n        setTimeout((t, r) => {\n          this.invokeWasmFunction(t, ...r);\n        }, e.data.delay, e.data.ptr, e.data.args);\n        break;\n      case \"console.log\":\n        console.log(e.data);\n        break;\n      case \"console.warn\":\n        console.warn(e.data);\n        break;\n      case \"console.error\":\n        console.error(e.data);\n        break;\n      case \"close\":\n        a(this, R).close();\n        break;\n      default:\n        throw new I(\"Unknown system message type `\" + e.type + \"`\");\n    }\n  }\n};\nvar g;\nvar f;\nvar wt;\ng = /* @__PURE__ */ new WeakMap(), f = /* @__PURE__ */ new WeakMap(), wt = /* @__PURE__ */ new WeakMap();\n\n// src/messageporthttp.ts\nasync function fetchASGI(client, resource, init, filter = (bodyChunk) => bodyChunk) {\n  if (typeof resource === \"string\" || typeof init !== \"undefined\") {\n    resource = new Request(resource, init);\n  }\n  const channel = new MessageChannel();\n  const clientPort = channel.port1;\n  client.postMessage(\n    {\n      type: \"makeRequest\",\n      scope: reqToASGI(resource)\n    },\n    [channel.port2]\n  );\n  const blob = await resource.blob();\n  if (!blob.size) {\n    clientPort.postMessage({\n      type: \"http.request\",\n      more_body: false\n    });\n  } else {\n    const reader = blob.stream().getReader();\n    try {\n      while (true) {\n        const { value: theChunk, done } = await reader.read();\n        clientPort.postMessage({\n          type: \"http.request\",\n          body: theChunk,\n          more_body: !done\n        });\n        if (done) {\n          break;\n        }\n      }\n    } finally {\n      reader.releaseLock();\n    }\n  }\n  return new Promise((resolve) => {\n    let streamController;\n    const readableStream = new ReadableStream({\n      start(controller) {\n        streamController = controller;\n      },\n      cancel(reason) {\n      }\n    });\n    let response;\n    clientPort.addEventListener(\"message\", (event) => {\n      const msg = event.data;\n      if (msg.type === \"http.response.start\") {\n        response = asgiToRes(msg, readableStream);\n        resolve(response);\n      } else if (msg.type === \"http.response.body\") {\n        if (msg.body) {\n          streamController.enqueue(filter(msg.body, response));\n        }\n        if (!msg.more_body) {\n          streamController.close();\n          clientPort.close();\n        }\n      } else {\n        throw new Error(\"Unexpected event type from clientPort: \" + msg.type);\n      }\n    });\n    clientPort.start();\n  });\n}\nfunction headersToASGI(headers) {\n  const result = [];\n  for (const [key, value] of headers.entries()) {\n    result.push([key, value]);\n  }\n  return result;\n}\nfunction reqToASGI(req) {\n  const url = new URL(req.url);\n  return {\n    type: \"http\",\n    asgi: {\n      version: \"3.0\",\n      spec_version: \"2.1\"\n    },\n    http_version: \"1.1\",\n    method: req.method,\n    scheme: url.protocol.replace(/:$/, \"\"),\n    path: url.pathname,\n    query_string: url.search.replace(/^\\?/, \"\"),\n    root_path: \"\",\n    headers: headersToASGI(req.headers)\n  };\n}\nfunction asgiToRes(res, body) {\n  return new Response(body, {\n    headers: res.headers,\n    status: res.status\n  });\n}\n\n// src/shinylive-sw.ts\nvar useCaching = false;\nvar cacheName = \"::shinyliveServiceworker\";\nvar version = \"v9\";\nfunction addCoiHeaders(resp) {\n  const headers = new Headers(resp.headers);\n  headers.set(\"Cross-Origin-Embedder-Policy\", \"credentialless\");\n  headers.set(\"Cross-Origin-Resource-Policy\", \"cross-origin\");\n  headers.set(\"Cross-Origin-Opener-Policy\", \"same-origin\");\n  return new Response(resp.body, {\n    status: resp.status,\n    statusText: resp.statusText,\n    headers\n  });\n}\nself.addEventListener(\"install\", (event) => {\n  event.waitUntil(\n    Promise.all([self.skipWaiting(), caches.open(version + cacheName)])\n  );\n});\nself.addEventListener(\"activate\", function(event) {\n  event.waitUntil(\n    (async () => {\n      await self.clients.claim();\n      const keys = await caches.keys();\n      return Promise.all(\n        keys.filter(function(key) {\n          return key.indexOf(version + cacheName) !== 0;\n        }).map(function(key) {\n          return caches.delete(key);\n        })\n      );\n    })()\n  );\n});\nself.addEventListener(\"fetch\", function(event) {\n  const request = event.request;\n  const url = new URL(request.url);\n  if (self.location.origin !== url.origin)\n    return;\n  if (url.pathname == \"/esbuild\")\n    return;\n  const base_path = dirname(self.location.pathname);\n  if (url.pathname == `${base_path}/shinylive-inject-socket.js`) {\n    event.respondWith(\n      new Response(shinylive_inject_socket_default, {\n        headers: { \"Content-Type\": \"text/javascript\" },\n        status: 200\n      })\n    );\n    return;\n  }\n  const coiRequested = url.searchParams.get(\"coi\") === \"1\" || request.referrer.includes(\"coi=1\");\n  const appPathRegex = /.*\\/(app_[^/]+\\/)/;\n  const m_appPath = appPathRegex.exec(url.pathname);\n  if (m_appPath) {\n    event.respondWith(\n      (async () => {\n        let pollCount = 5;\n        while (!apps[m_appPath[1]]) {\n          if (pollCount == 0) {\n            return new Response(\n              `Couldn't find parent page for ${url}. This may be because the Service Worker has updated. Try reloading the page.`,\n              {\n                status: 404\n              }\n            );\n          }\n          console.log(\"App URL not registered. Waiting 50ms.\");\n          await sleep(50);\n          pollCount--;\n        }\n        url.pathname = url.pathname.replace(appPathRegex, \"/\");\n        const isAppRoot = url.pathname === \"/\";\n        const filter = isAppRoot ? injectSocketFilter : identityFilter;\n        const blob = await request.blob();\n        const resp = await fetchASGI(\n          apps[m_appPath[1]],\n          new Request(url.toString(), {\n            method: request.method,\n            headers: request.headers,\n            body: request.method === \"GET\" || request.method === \"HEAD\" ? void 0 : blob,\n            credentials: request.credentials,\n            cache: request.cache,\n            redirect: request.redirect,\n            referrer: request.referrer\n          }),\n          void 0,\n          filter\n        );\n        if (coiRequested) {\n          return addCoiHeaders(resp);\n        } else {\n          return resp;\n        }\n      })()\n    );\n    return;\n  }\n  if (request.method !== \"GET\") {\n    return;\n  }\n  if (useCaching) {\n    event.respondWith(\n      (async () => {\n        const cachedResponse = await caches.match(request);\n        if (cachedResponse) {\n          return cachedResponse;\n        }\n        try {\n          const networkResponse = addCoiHeaders(await fetch(request));\n          const baseUrl = self.location.origin + dirname(self.location.pathname);\n          if (request.url.startsWith(baseUrl + \"/shinylive/\") || request.url === baseUrl + \"/favicon.ico\") {\n            const cache = await caches.open(version + cacheName);\n            await cache.put(request, networkResponse.clone());\n          }\n          return networkResponse;\n        } catch {\n          return new Response(\"Failed to find in cache, or fetch.\", {\n            status: 404\n          });\n        }\n      })()\n    );\n    return;\n  }\n  if (coiRequested) {\n    event.respondWith(\n      (async () => {\n        const resp = await fetch(request);\n        return addCoiHeaders(resp);\n      })()\n    );\n  }\n});\nvar apps = {};\n(async () => {\n  const allClients = await self.clients.matchAll();\n  for (const client of allClients) {\n    client.postMessage({\n      type: \"serviceworkerStart\"\n    });\n  }\n})();\nself.addEventListener(\"message\", (event) => {\n  const msg = event.data;\n  if (msg.type === \"configureProxyPath\") {\n    const path = msg.path;\n    const port = event.ports[0];\n    apps[path] = port;\n  }\n});\nfunction identityFilter(bodyChunk, response) {\n  return bodyChunk;\n}\nfunction injectSocketFilter(bodyChunk, response) {\n  const contentType = response.headers.get(\"content-type\");\n  if (contentType && /^text\\/html(;|$)/.test(contentType)) {\n    const bodyChunkStr = uint8ArrayToString(bodyChunk);\n    const base_path = dirname(self.location.pathname);\n    const newStr = bodyChunkStr.replace(\n      /<\\/head>/,\n      `<script src=\"${base_path}/shinylive-inject-socket.js\" type=\"module\"><\\/script>\n<\/head>`\n    );\n    const newChunk = Uint8Array.from(\n      newStr.split(\"\").map((s) => s.charCodeAt(0))\n    );\n    return newChunk;\n  }\n  return bodyChunk;\n}\n","type":"text"}]
