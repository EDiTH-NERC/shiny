---
format: 
  html:
    page-layout: custom
    theme: 
      - yeti
      - styles.css
filters:
  - shinylive
---

```{r, echo=FALSE}
df <- readRDS("data/PBDB.RDS")
```

```{shinylive-r}
#| standalone: true
#| viewerHeight: "100vh"
library(shiny)
library(bslib)
library(ggplot2)
library(deeptime)
library(palaeoverse)

# Define UI for app that draws a histogram ----
ui <- page_sidebar(
  sidebar = sidebar(open = "open",
    numericInput("n", "Sample count", 100),
    checkboxInput("pause", "Pause", FALSE),
    selectInput("family", "Family",
                c("All", "Acroporidae", "Poritidae")),
    radioButtons("region", "Geographic region",
          c("Caribbean"),
          selected = "Caribbean"
        ),
    radioButtons("rank", "Taxonomic rank",
          c("Species", "Genus", "Family"),
          selected = "Genus"
        )
  ),
  plotOutput("plot", width=1100)
)

server <- function(input, output, session) {
  data <- reactive({
    input$resample
    if (!isTRUE(input$pause)) {
      invalidateLater(1000)
    }
    rnorm(input$n)
    mtcars
  })
  
  output$plot <- renderPlot({
    ggplot(data(), aes(x = mpg, y = cyl)) + 
      geom_point()
  }, res=140)
}

# Create Shiny app ----
shinyApp(ui = ui, server = server)
```