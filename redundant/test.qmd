---
format: 
  html:
    page-layout: custom
    theme: 
      - yeti
      - styles.css
filters:
  - shinylive
---

```{shinylive-r}
#| standalone: true
#| viewerHeight: "100vh"
library(shiny)
library(bslib)
library(ggplot2)

# Define UI for app that draws a histogram ----
ui <- page_sidebar(
  sidebar = sidebar(open = "open",
    radioButtons("type", "Type",
             c(Sampling = "sampling", Range = "range", 
               Diversity = "richness", Diversification = "rates")),
    radioButtons("rank", "Taxonomic rank",
                 c(Species = "species", Genus = "genus", Family = "family"), selected = "genus"),
    selectInput("group", "Group by",
                c(None = ".", Family = "family", Genus = "genus", Country = "cc")),
    selectInput("region", "Geographic region",
                c("Global", "Caribbean", "Mediterranean", "Arabia", "Indo-Australian Archipelago"),
                selected = "Caribbean"),
    selectInput("family", "Family",
                c(All = ".", "Acroporidae"),
                selected = "All")
  ),
  plotOutput("plot", width=1100)
)

server <- function(input, output, session) {
  data <- reactive({
    read.csv("https://raw.githubusercontent.com/EDiTH-NERC/dash/refs/heads/main/data/test.csv")
  })
  
  filter_data <- reactive({
    # Get data
    df <- data()
    # Filter rank
    if (input$rank == "species") {
      df <- subset(df, accepted_rank == "species")
      df <- subset(df, !is.na(species))
    }
    if (input$rank == "genus") {
      df <- subset(df, accepted_rank %in% c("species", "genus"))
      df <- subset(df, !is.na(genus))
    } 
    if (input$rank == "family") {
      df <- subset(df, accepted_rank %in% c("species", "genus", "family"))
      df <- subset(df, !is.na(family))
    }
    # Filter region
    if (input$region == "Caribbean") {
      df <- subset(df, region == "Caribbean")
    }
    if (input$region == "Mediterranean") {
      df <- subset(df, region == "Mediterranean")
    }
    if (input$region == "Arabia") {
      df <- subset(df, region == "Arabia")
    }
    if (input$region == "Indo-Australian Archipelago") {
      df <- subset(df, region == "Indo-Australian Archipelago")
    }
    # Filter family
    if (input$family != ".") {
      df <- subset(df, family == input$family)
    }
    df
  })

  output$plot <- renderPlot({ 
    ggplot(data = filter_data(), aes(x = min_ma, y = max_ma)) +
      geom_point()
  }, res = 140)
}

# Create Shiny app ----
shinyApp(ui = ui, server = server)
```